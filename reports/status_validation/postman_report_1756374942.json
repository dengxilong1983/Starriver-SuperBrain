{
  "collection": {
    "item": [
      {
        "id": "89497a62-a079-490e-abb9-26e0cad20688",
        "name": "Agents Status",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "agents",
              "status"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "348027de-11a1-477f-9603-e573197ad5c7",
              "type": "text/javascript",
              "exec": [
                "pm.test('Response is JSON', function () {",
                "  pm.response.to.have.header('Content-Type');",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const DISALLOWED = new Set(['running','success','error']);",
                "const TASK_ALLOWED = new Set(['pending','in_progress','completed','failed','canceled','timeout']);",
                "const AGENT_HEALTH_ALLOWED = new Set(['idle','busy','error','maintenance']);",
                "",
                "function scan(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(scan); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        pm.expect(DISALLOWED.has(v)).to.eql(false, `status contains disallowed value: ${v}`);",
                "        pm.expect(TASK_ALLOWED.has(v) || AGENT_HEALTH_ALLOWED.has(v)).to.eql(true, `status not in allowed set: ${v}`);",
                "        pm.expect(v !== 'active').to.eql(true, 'status must not be \\'active\\'');",
                "      }",
                "      scan(v);",
                "    });",
                "  }",
                "}",
                "scan(json);",
                "pm.test('Agent health status validation passed', function () { pm.expect(true).to.be.true; });"
              ],
              "_lastExecutionId": "94c6394c-63bd-4a3e-8e4d-837fea0c3e55"
            }
          }
        ]
      },
      {
        "id": "fdb53739-7a83-45a8-91ef-d9b67438ed3c",
        "name": "Memory Sync (202 + CloudSyncJob)",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "memory",
              "sync"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"items\": [ { \"content\": { \"type\": \"note\", \"text\": \"hello\" } } ]\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4e9b6cf2-b518-443a-9c72-999c42645740",
              "type": "text/javascript",
              "exec": [
                "const status = pm.response.code;",
                "pm.test('Accepted (202) or OK (200/201/204) for sync endpoint', function () {",
                "  pm.expect([200,201,202,204]).to.include(status);",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const DISALLOWED = new Set(['running','success','error']);",
                "const JOB_ALLOWED = new Set(['pending','in_progress','completed','failed','timeout','manual_required']);",
                "",
                "function scan(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(scan); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        pm.expect(DISALLOWED.has(v)).to.eql(false, `status contains disallowed value: ${v}`);",
                "        pm.expect(JOB_ALLOWED.has(v)).to.eql(true, `CloudSyncJob.status not in allowed set: ${v}`);",
                "      }",
                "      scan(v);",
                "    });",
                "  }",
                "}",
                "scan(json);",
                "pm.test('CloudSyncJob status validation passed', function () { pm.expect(true).to.be.true; });"
              ],
              "_lastExecutionId": "1165411e-34a3-4b52-9b6d-f7d9f29daafb"
            }
          }
        ]
      },
      {
        "id": "aee521e8-7d25-4045-8a82-03e183d4d293",
        "name": "Memory Export",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "memory",
              "export"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "880e772a-825b-4d5e-8819-b39e798da649",
              "type": "text/javascript",
              "exec": [
                "pm.test('Export endpoint responds successfully', function () {",
                "  pm.expect([200,202]).to.include(pm.response.code);",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const DISALLOWED = new Set(['running','success','error']);",
                "const JOB_ALLOWED = new Set(['pending','in_progress','completed','failed','timeout','manual_required']);",
                "",
                "function validateStatus(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(validateStatus); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Forbidden status detected: ${v}`);",
                "        pm.expect(JOB_ALLOWED.has(v)).to.eql(true, `Invalid export job status: ${v}`);",
                "      }",
                "      validateStatus(v);",
                "    });",
                "  }",
                "}",
                "validateStatus(json);"
              ],
              "_lastExecutionId": "74937ccc-a67e-4f98-b4f9-3cdca6edffdc"
            }
          }
        ]
      },
      {
        "id": "fe8c63c4-260f-4717-bff6-03626628b90e",
        "name": "Execution Act",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "execution",
              "act"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"action\": \"test_action\", \"parameters\": {}}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "dfc0a65c-ecfe-45e8-84db-901155a9e2f5",
              "type": "text/javascript",
              "exec": [
                "pm.test('Execution endpoint responds', function () {",
                "  pm.expect([200,201,202]).to.include(pm.response.code);",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const DISALLOWED = new Set(['running','success','error']);",
                "const EXECUTION_ALLOWED = new Set(['pending','in_progress','completed','failed']);",
                "",
                "function validateExecutionStatus(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(validateExecutionStatus); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        pm.expect(DISALLOWED.has(v)).to.eql(false, `ExecutionResult forbidden status: ${v}`);",
                "        pm.expect(EXECUTION_ALLOWED.has(v)).to.eql(true, `ExecutionResult invalid status: ${v}`);",
                "        pm.expect(v !== 'active').to.eql(true, 'ExecutionResult status cannot be active');",
                "      }",
                "      validateExecutionStatus(v);",
                "    });",
                "  }",
                "}",
                "validateExecutionStatus(json);"
              ],
              "_lastExecutionId": "d21d5c24-ca95-41a3-bc22-90bcf550f392"
            }
          }
        ]
      },
      {
        "id": "023d0567-a19e-41bc-b007-97cf6a68f7fa",
        "name": "Reasoning Plan",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "reasoning",
              "plan"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"goal\": \"test planning\", \"context\": {}}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "72e076ba-572b-4551-9945-9a4022567edd",
              "type": "text/javascript",
              "exec": [
                "pm.test('Reasoning plan endpoint responds', function () {",
                "  pm.expect([200,201,202]).to.include(pm.response.code);",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const DISALLOWED = new Set(['running','success','error']);",
                "const PLAN_ALLOWED = new Set(['pending','in_progress','completed','failed']);",
                "",
                "function validatePlanStatus(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(validatePlanStatus); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Planning forbidden status: ${v}`);",
                "        pm.expect(PLAN_ALLOWED.has(v)).to.eql(true, `Planning invalid status: ${v}`);",
                "      }",
                "      validatePlanStatus(v);",
                "    });",
                "  }",
                "}",
                "validatePlanStatus(json);"
              ],
              "_lastExecutionId": "b95f3a26-8879-45de-baf0-c637c1c5b297"
            }
          }
        ]
      },
      {
        "id": "40737a7c-bdec-44ef-baa3-751eed980280",
        "name": "Consciousness Attention GET",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "consciousness",
              "attention"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e3f6170e-ebac-46ed-b6c6-b20079a3c84f",
              "type": "text/javascript",
              "exec": [
                "pm.test('Attention GET endpoint responds', function () {",
                "  pm.expect([200]).to.include(pm.response.code);",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const DISALLOWED = new Set(['running','success','error']);",
                "const ATTENTION_ALLOWED = new Set(['idle','busy','focused','distracted']);",
                "",
                "function validateAttentionStatus(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(validateAttentionStatus); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Attention forbidden status: ${v}`);",
                "        pm.expect(v !== 'active').to.eql(true, 'Attention status cannot be active');",
                "      }",
                "      validateAttentionStatus(v);",
                "    });",
                "  }",
                "}",
                "validateAttentionStatus(json);"
              ],
              "_lastExecutionId": "07cc87e9-d917-487c-9e43-a1e81043db07"
            }
          }
        ]
      },
      {
        "id": "296aad95-a9ea-4732-97d0-c757565a108c",
        "name": "Consciousness State GET",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "consciousness",
              "state"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fa96c21e-9b04-4442-a93e-c39478af5c9b",
              "type": "text/javascript",
              "exec": [
                "pm.test('State GET endpoint responds', function () {",
                "  pm.expect([200]).to.include(pm.response.code);",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const DISALLOWED = new Set(['running','success','error']);",
                "",
                "function validateConsciousnessState(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(validateConsciousnessState); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Consciousness forbidden status: ${v}`);",
                "        pm.expect(v !== 'active').to.eql(true, 'Consciousness status cannot be active');",
                "      }",
                "      validateConsciousnessState(v);",
                "    });",
                "  }",
                "}",
                "validateConsciousnessState(json);"
              ],
              "_lastExecutionId": "b8127a28-0f21-4620-a3c4-cf34840ce567"
            }
          }
        ]
      },
      {
        "id": "0aa7320d-3aac-4e4c-8812-6b14bbab9574",
        "name": "Experience Rules POST",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "experience",
              "rules"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"title\": \"test rule\", \"content\": \"test rule content\", \"category\": \"test\", \"tags\": [\"test\"], \"sources\": [\"integration_test\"]}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a11b768c-1fbc-466d-9877-4dbf2d3883b3",
              "type": "text/javascript",
              "exec": [
                "pm.test('Experience rules POST endpoint responds', function () {",
                "  pm.expect([200,201]).to.include(pm.response.code);",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const EXPERIENCE_ALLOWED = new Set(['active','deprecated','draft']);",
                "",
                "function validateExperienceStatus(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(validateExperienceStatus); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        // Experience rules can use 'active' (enable/disable semantics)",
                "        pm.expect(EXPERIENCE_ALLOWED.has(v)).to.eql(true, `ExperienceRule invalid status: ${v}`);",
                "      }",
                "      validateExperienceStatus(v);",
                "    });",
                "  }",
                "}",
                "validateExperienceStatus(json);",
                "pm.test('Experience rule status validation passed', function () { pm.expect(true).to.be.true; });"
              ],
              "_lastExecutionId": "1e0b6072-9045-4319-b229-ed556c13a109"
            }
          }
        ]
      },
      {
        "id": "99623aef-e0c8-490b-a1a5-42e445604bfe",
        "name": "Experience Candidates GET",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "experience",
              "candidates"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "588e424e-0c8a-4e0f-923a-e87f7b1b5a81",
              "type": "text/javascript",
              "exec": [
                "pm.test('Experience candidates endpoint responds', function () {",
                "  pm.expect([200]).to.include(pm.response.code);",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const EXPERIENCE_ALLOWED = new Set(['active','deprecated','draft']);",
                "",
                "function validateCandidateStatus(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(validateCandidateStatus); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        pm.expect(EXPERIENCE_ALLOWED.has(v)).to.eql(true, `Candidate invalid status: ${v}`);",
                "      }",
                "      validateCandidateStatus(v);",
                "    });",
                "  }",
                "}",
                "validateCandidateStatus(json);"
              ],
              "_lastExecutionId": "f683a0de-ef58-4ceb-a784-9e3312760a04"
            }
          }
        ]
      },
      {
        "id": "6735f2d0-95e5-496c-8565-9def1f895244",
        "name": "Cloud Status",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "cloud",
              "status"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [
              {
                "key": "user_id",
                "value": "test-user"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e8c36bbe-5479-41d8-8bd2-fbf57a2bf3c3",
              "type": "text/javascript",
              "exec": [
                "pm.test('Cloud status endpoint responds', function () {",
                "  pm.expect([200]).to.include(pm.response.code);",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const DISALLOWED = new Set(['running','success','error']);",
                "const CLOUD_STATUS_ALLOWED = new Set(['connected','disconnected','syncing','error']);",
                "",
                "function validateCloudStatus(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(validateCloudStatus); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Cloud forbidden status: ${v}`);",
                "        pm.expect(v !== 'active').to.eql(true, 'Cloud status cannot be active');",
                "      }",
                "      validateCloudStatus(v);",
                "    });",
                "  }",
                "}",
                "validateCloudStatus(json);"
              ],
              "_lastExecutionId": "664139c2-27ac-4771-84b5-31f5ab4ff72b"
            }
          }
        ]
      },
      {
        "id": "d8374af6-a64f-49b1-8c67-2d77faa57122",
        "name": "Observability Metrics",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "observability",
              "metrics"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a348cf08-136c-4944-abb1-99c418d1cb33",
              "type": "text/javascript",
              "exec": [
                "pm.test('Metrics endpoint responds', function () {",
                "  pm.expect([200]).to.include(pm.response.code);",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const DISALLOWED = new Set(['running','success','error']);",
                "",
                "function validateMetricsStatus(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(validateMetricsStatus); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Metrics forbidden status: ${v}`);",
                "        pm.expect(v !== 'active').to.eql(true, 'Metrics status cannot be active');",
                "      }",
                "      validateMetricsStatus(v);",
                "    });",
                "  }",
                "}",
                "validateMetricsStatus(json);",
                "pm.test('Metrics status validation completed', function () { pm.expect(true).to.be.true; });"
              ],
              "_lastExecutionId": "8382ca32-2870-4498-a74c-b11945ea57eb"
            }
          }
        ]
      },
      {
        "id": "78c5187e-ab95-4323-95ab-756bd99328d7",
        "name": "Observability Logs Search",
        "request": {
          "url": {
            "path": [
              "api",
              "v2.3-preview",
              "observability",
              "logs",
              "search"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [
              {
                "key": "q",
                "value": "test"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e65867cd-7b8e-498e-a552-17aa211c1289",
              "type": "text/javascript",
              "exec": [
                "pm.test('Logs search endpoint responds', function () {",
                "  pm.expect([200]).to.include(pm.response.code);",
                "});",
                "",
                "let json = {};",
                "try { json = pm.response.json(); } catch (e) { json = {}; }",
                "",
                "const DISALLOWED = new Set(['running','success','error']);",
                "",
                "function validateLogsStatus(obj) {",
                "  if (obj === null || obj === undefined) return;",
                "  if (Array.isArray(obj)) { obj.forEach(validateLogsStatus); return; }",
                "  if (typeof obj === 'object') {",
                "    Object.keys(obj).forEach(k => {",
                "      const v = obj[k];",
                "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Logs forbidden status: ${v}`);",
                "        pm.expect(v !== 'active').to.eql(true, 'Logs status cannot be active');",
                "      }",
                "      validateLogsStatus(v);",
                "    });",
                "  }",
                "}",
                "validateLogsStatus(json);"
              ],
              "_lastExecutionId": "7ef05e6c-c461-4dd1-abe2-069f794ed46d"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "984e7031-30a3-4a2c-862e-ac613a2df005",
      "name": "V2.3 Status Enum Compliance - Enhanced Coverage",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Comprehensive assertions to enforce status enums across all APIs (95% coverage target)",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2025-08-28T08:00:00.000Z",
      "postman_exported_using": "Postman/10.x"
    },
    "id": "8f7b3a74-5c2f-4e15-9db0-1e5f2243e001",
    "name": "V2.3 Local",
    "values": [
      {
        "type": "any",
        "value": "http://localhost:8000",
        "key": "baseUrl"
      },
      {
        "type": "any",
        "value": "http://localhost:8000",
        "key": "BASE_URL"
      },
      {
        "type": "any",
        "value": "http://localhost:8000",
        "key": "baseurl"
      }
    ]
  },
  "globals": {
    "id": "8b10e1f6-e04b-4553-956d-22753a7e7202",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 16,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 5.416666666666667,
      "responseMin": 2,
      "responseMax": 19,
      "responseSd": 4.251633672941364,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1756374943478,
      "completed": 1756374950854
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 12,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a73037c5-1486-4d37-86c5-3632a6a744ee",
          "httpRequestId": "b282922e-42d0-47f5-b954-f49b14c3c184"
        },
        "item": {
          "id": "89497a62-a079-490e-abb9-26e0cad20688",
          "name": "Agents Status",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "agents",
                "status"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "348027de-11a1-477f-9603-e573197ad5c7",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Response is JSON', function () {",
                  "  pm.response.to.have.header('Content-Type');",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const DISALLOWED = new Set(['running','success','error']);",
                  "const TASK_ALLOWED = new Set(['pending','in_progress','completed','failed','canceled','timeout']);",
                  "const AGENT_HEALTH_ALLOWED = new Set(['idle','busy','error','maintenance']);",
                  "",
                  "function scan(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(scan); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        pm.expect(DISALLOWED.has(v)).to.eql(false, `status contains disallowed value: ${v}`);",
                  "        pm.expect(TASK_ALLOWED.has(v) || AGENT_HEALTH_ALLOWED.has(v)).to.eql(true, `status not in allowed set: ${v}`);",
                  "        pm.expect(v !== 'active').to.eql(true, 'status must not be \\'active\\'');",
                  "      }",
                  "      scan(v);",
                  "    });",
                  "  }",
                  "}",
                  "scan(json);",
                  "pm.test('Agent health status validation passed', function () { pm.expect(true).to.be.true; });"
                ],
                "_lastExecutionId": "94c6394c-63bd-4a3e-8e4d-837fea0c3e55"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "agents",
              "status"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "15a84cce-2efe-4b89-9151-29a5bdef31cd",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "d05fb74a-64a9-42b3-a0bc-743b466c7d23",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:43 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "x-trace-id",
              "value": "524b227c-d8a3-4e06-80c7-18724220714c"
            },
            {
              "key": "content-length",
              "value": "86"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              52,
              48,
              52,
              48,
              49,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              70,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              50,
              52,
              98,
              50,
              50,
              55,
              99,
              45,
              100,
              56,
              97,
              51,
              45,
              52,
              101,
              48,
              54,
              45,
              56,
              48,
              99,
              55,
              45,
              49,
              56,
              55,
              50,
              52,
              50,
              50,
              48,
              55,
              49,
              52,
              99,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 19,
          "responseSize": 86
        },
        "id": "89497a62-a079-490e-abb9-26e0cad20688",
        "assertions": [
          {
            "assertion": "Response is JSON",
            "skipped": false
          },
          {
            "assertion": "Agent health status validation passed",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "72fa3759-b8bd-44e9-ba18-8978d0227695",
          "length": 12,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "44e9bd46-d562-4b94-b4bc-39d5c7b2729b"
        },
        "item": {
          "id": "fdb53739-7a83-45a8-91ef-d9b67438ed3c",
          "name": "Memory Sync (202 + CloudSyncJob)",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "memory",
                "sync"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [ { \"content\": { \"type\": \"note\", \"text\": \"hello\" } } ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4e9b6cf2-b518-443a-9c72-999c42645740",
                "type": "text/javascript",
                "exec": [
                  "const status = pm.response.code;",
                  "pm.test('Accepted (202) or OK (200/201/204) for sync endpoint', function () {",
                  "  pm.expect([200,201,202,204]).to.include(status);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const DISALLOWED = new Set(['running','success','error']);",
                  "const JOB_ALLOWED = new Set(['pending','in_progress','completed','failed','timeout','manual_required']);",
                  "",
                  "function scan(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(scan); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        pm.expect(DISALLOWED.has(v)).to.eql(false, `status contains disallowed value: ${v}`);",
                  "        pm.expect(JOB_ALLOWED.has(v)).to.eql(true, `CloudSyncJob.status not in allowed set: ${v}`);",
                  "      }",
                  "      scan(v);",
                  "    });",
                  "  }",
                  "}",
                  "scan(json);",
                  "pm.test('CloudSyncJob status validation passed', function () { pm.expect(true).to.be.true; });"
                ],
                "_lastExecutionId": "1165411e-34a3-4b52-9b6d-f7d9f29daafb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "memory",
              "sync"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d99b2a4b-bcee-46fb-ac03-fd811c12f5db",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "69",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"items\": [ { \"content\": { \"type\": \"note\", \"text\": \"hello\" } } ]\n}"
          }
        },
        "response": {
          "id": "13ab0965-a41a-468d-ab67-5964a3b980a9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:43 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "134"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-trace-id",
              "value": "0dc64876-be5d-482c-98e7-937e08c70630"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              121,
              110,
              99,
              101,
              100,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              49,
              44,
              34,
              102,
              97,
              105,
              108,
              101,
              100,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              48,
              44,
              34,
              116,
              114,
              97,
              99,
              101,
              95,
              105,
              100,
              34,
              58,
              34,
              48,
              54,
              100,
              53,
              55,
              49,
              53,
              55,
              45,
              98,
              51,
              57,
              55,
              45,
              52,
              53,
              102,
              98,
              45,
              57,
              102,
              51,
              98,
              45,
              52,
              99,
              97,
              51,
              97,
              57,
              98,
              54,
              52,
              99,
              101,
              57,
              34,
              44,
              34,
              102,
              105,
              110,
              105,
              115,
              104,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              56,
              84,
              48,
              57,
              58,
              53,
              53,
              58,
              52,
              52,
              46,
              54,
              55,
              56,
              55,
              57,
              54,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 134
        },
        "id": "fdb53739-7a83-45a8-91ef-d9b67438ed3c",
        "assertions": [
          {
            "assertion": "Accepted (202) or OK (200/201/204) for sync endpoint",
            "skipped": false
          },
          {
            "assertion": "CloudSyncJob status validation passed",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "19f97e6c-e631-4bae-8cc0-4381579bacaa",
          "length": 12,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "efc52d52-fac0-46ef-8ed8-450ed1ad76e6"
        },
        "item": {
          "id": "aee521e8-7d25-4045-8a82-03e183d4d293",
          "name": "Memory Export",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "memory",
                "export"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "880e772a-825b-4d5e-8819-b39e798da649",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Export endpoint responds successfully', function () {",
                  "  pm.expect([200,202]).to.include(pm.response.code);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const DISALLOWED = new Set(['running','success','error']);",
                  "const JOB_ALLOWED = new Set(['pending','in_progress','completed','failed','timeout','manual_required']);",
                  "",
                  "function validateStatus(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(validateStatus); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Forbidden status detected: ${v}`);",
                  "        pm.expect(JOB_ALLOWED.has(v)).to.eql(true, `Invalid export job status: ${v}`);",
                  "      }",
                  "      validateStatus(v);",
                  "    });",
                  "  }",
                  "}",
                  "validateStatus(json);"
                ],
                "_lastExecutionId": "74937ccc-a67e-4f98-b4f9-3cdca6edffdc"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "memory",
              "export"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "58362c4f-530b-4bff-a336-4b367586a3a9",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "41953d38-2b41-4ff4-98d0-a58d4c7d6527",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "131"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-trace-id",
              "value": "ba4a2c8d-0063-47c4-8b5e-70552c855e66"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              120,
              112,
              111,
              114,
              116,
              95,
              117,
              114,
              108,
              34,
              58,
              34,
              47,
              100,
              111,
              119,
              110,
              108,
              111,
              97,
              100,
              115,
              47,
              109,
              101,
              109,
              111,
              114,
              121,
              47,
              101,
              120,
              112,
              111,
              114,
              116,
              45,
              54,
              52,
              55,
              100,
              54,
              99,
              56,
              48,
              45,
              48,
              102,
              57,
              57,
              45,
              52,
              98,
              55,
              50,
              45,
              57,
              56,
              54,
              53,
              45,
              48,
              50,
              98,
              53,
              99,
              97,
              99,
              98,
              97,
              56,
              50,
              99,
              46,
              106,
              115,
              111,
              110,
              34,
              44,
              34,
              101,
              120,
              112,
              105,
              114,
              101,
              115,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              56,
              84,
              49,
              48,
              58,
              53,
              53,
              58,
              52,
              53,
              46,
              50,
              57,
              51,
              51,
              53,
              50,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 131
        },
        "id": "aee521e8-7d25-4045-8a82-03e183d4d293",
        "assertions": [
          {
            "assertion": "Export endpoint responds successfully",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "431d9c12-2199-4bde-a343-4c69802d5322",
          "length": 12,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dbf8b3eb-c92c-481c-8c50-bf656eda765c"
        },
        "item": {
          "id": "fe8c63c4-260f-4717-bff6-03626628b90e",
          "name": "Execution Act",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "execution",
                "act"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"action\": \"test_action\", \"parameters\": {}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dfc0a65c-ecfe-45e8-84db-901155a9e2f5",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Execution endpoint responds', function () {",
                  "  pm.expect([200,201,202]).to.include(pm.response.code);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const DISALLOWED = new Set(['running','success','error']);",
                  "const EXECUTION_ALLOWED = new Set(['pending','in_progress','completed','failed']);",
                  "",
                  "function validateExecutionStatus(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(validateExecutionStatus); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        pm.expect(DISALLOWED.has(v)).to.eql(false, `ExecutionResult forbidden status: ${v}`);",
                  "        pm.expect(EXECUTION_ALLOWED.has(v)).to.eql(true, `ExecutionResult invalid status: ${v}`);",
                  "        pm.expect(v !== 'active').to.eql(true, 'ExecutionResult status cannot be active');",
                  "      }",
                  "      validateExecutionStatus(v);",
                  "    });",
                  "  }",
                  "}",
                  "validateExecutionStatus(json);"
                ],
                "_lastExecutionId": "d21d5c24-ca95-41a3-bc22-90bcf550f392"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "execution",
              "act"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5b6b8856-112a-4ae9-8875-39f2c4d9a5ff",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "43",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"action\": \"test_action\", \"parameters\": {}}"
          }
        },
        "response": {
          "id": "d8047d4a-33fe-468d-ab6a-2389a9157d6d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "62"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-trace-id",
              "value": "0341efe5-a838-4516-a0ee-3baa2cc7999b"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              111,
              117,
              116,
              112,
              117,
              116,
              34,
              58,
              123,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              95,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              115,
              34,
              58,
              123,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 62
        },
        "id": "fe8c63c4-260f-4717-bff6-03626628b90e",
        "assertions": [
          {
            "assertion": "Execution endpoint responds",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "75e57c8f-e146-40be-a598-49772b8f8932",
          "length": 12,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d460937f-bd94-4d34-a3f6-448114bcd7f8"
        },
        "item": {
          "id": "023d0567-a19e-41bc-b007-97cf6a68f7fa",
          "name": "Reasoning Plan",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "reasoning",
                "plan"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"goal\": \"test planning\", \"context\": {}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "72e076ba-572b-4551-9945-9a4022567edd",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Reasoning plan endpoint responds', function () {",
                  "  pm.expect([200,201,202]).to.include(pm.response.code);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const DISALLOWED = new Set(['running','success','error']);",
                  "const PLAN_ALLOWED = new Set(['pending','in_progress','completed','failed']);",
                  "",
                  "function validatePlanStatus(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(validatePlanStatus); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Planning forbidden status: ${v}`);",
                  "        pm.expect(PLAN_ALLOWED.has(v)).to.eql(true, `Planning invalid status: ${v}`);",
                  "      }",
                  "      validatePlanStatus(v);",
                  "    });",
                  "  }",
                  "}",
                  "validatePlanStatus(json);"
                ],
                "_lastExecutionId": "b95f3a26-8879-45de-baf0-c637c1c5b297"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "reasoning",
              "plan"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "39a9da57-7b8a-41b7-8688-369e8f27c0ca",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "40",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"goal\": \"test planning\", \"context\": {}}"
          }
        },
        "response": {
          "id": "9f953e3a-6c3d-49c1-a1e5-422433049bbe",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:46 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "365"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-trace-id",
              "value": "04bc4afe-abf7-4106-9a5b-72861845d94d"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              108,
              97,
              110,
              95,
              105,
              100,
              34,
              58,
              34,
              102,
              101,
              102,
              102,
              100,
              54,
              50,
              48,
              45,
              55,
              99,
              97,
              52,
              45,
              52,
              52,
              51,
              48,
              45,
              56,
              52,
              50,
              100,
              45,
              100,
              55,
              98,
              101,
              49,
              52,
              99,
              97,
              102,
              100,
              49,
              51,
              34,
              44,
              34,
              115,
              116,
              101,
              112,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              110,
              100,
              101,
              120,
              34,
              58,
              49,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              115,
              116,
              101,
              112,
              45,
              49,
              34,
              44,
              34,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              95,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              45,
              49,
              34,
              125,
              44,
              123,
              34,
              105,
              110,
              100,
              101,
              120,
              34,
              58,
              50,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              115,
              116,
              101,
              112,
              45,
              50,
              34,
              44,
              34,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              95,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              45,
              50,
              34,
              125,
              44,
              123,
              34,
              105,
              110,
              100,
              101,
              120,
              34,
              58,
              51,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              115,
              116,
              101,
              112,
              45,
              51,
              34,
              44,
              34,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              95,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              45,
              51,
              34,
              125,
              44,
              123,
              34,
              105,
              110,
              100,
              101,
              120,
              34,
              58,
              52,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              115,
              116,
              101,
              112,
              45,
              52,
              34,
              44,
              34,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              95,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              45,
              52,
              34,
              125,
              44,
              123,
              34,
              105,
              110,
              100,
              101,
              120,
              34,
              58,
              53,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              115,
              116,
              101,
              112,
              45,
              53,
              34,
              44,
              34,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              95,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              45,
              53,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 365
        },
        "id": "023d0567-a19e-41bc-b007-97cf6a68f7fa",
        "assertions": [
          {
            "assertion": "Reasoning plan endpoint responds",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "47008795-d5a5-4c88-b27a-4713e3a6b779",
          "length": 12,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ba6e0a8d-1960-4955-bfcb-404e8cf98f96"
        },
        "item": {
          "id": "40737a7c-bdec-44ef-baa3-751eed980280",
          "name": "Consciousness Attention GET",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "consciousness",
                "attention"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e3f6170e-ebac-46ed-b6c6-b20079a3c84f",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Attention GET endpoint responds', function () {",
                  "  pm.expect([200]).to.include(pm.response.code);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const DISALLOWED = new Set(['running','success','error']);",
                  "const ATTENTION_ALLOWED = new Set(['idle','busy','focused','distracted']);",
                  "",
                  "function validateAttentionStatus(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(validateAttentionStatus); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Attention forbidden status: ${v}`);",
                  "        pm.expect(v !== 'active').to.eql(true, 'Attention status cannot be active');",
                  "      }",
                  "      validateAttentionStatus(v);",
                  "    });",
                  "  }",
                  "}",
                  "validateAttentionStatus(json);"
                ],
                "_lastExecutionId": "07cc87e9-d917-487c-9e43-a1e81043db07"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "consciousness",
              "attention"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e2e07ad2-e69c-4dd8-af99-aab32516e503",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "5db18e9d-9e29-4792-9914-944b32d50a4a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:46 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "90"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-trace-id",
              "value": "831b46f2-29c5-45b5-b9a8-dc101121a6a2"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              116,
              97,
              99,
              107,
              34,
              58,
              91,
              93,
              44,
              34,
              115,
              116,
              97,
              99,
              107,
              95,
              115,
              105,
              122,
              101,
              34,
              58,
              48,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              56,
              84,
              48,
              56,
              58,
              48,
              55,
              58,
              53,
              54,
              46,
              51,
              48,
              55,
              50,
              53,
              57,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 90
        },
        "id": "40737a7c-bdec-44ef-baa3-751eed980280",
        "assertions": [
          {
            "assertion": "Attention GET endpoint responds",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d8bbb740-b633-4112-ad0b-09b21413e611",
          "length": 12,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "80e858ed-db6a-4e0c-87e5-6da27fd078b2"
        },
        "item": {
          "id": "296aad95-a9ea-4732-97d0-c757565a108c",
          "name": "Consciousness State GET",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "consciousness",
                "state"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fa96c21e-9b04-4442-a93e-c39478af5c9b",
                "type": "text/javascript",
                "exec": [
                  "pm.test('State GET endpoint responds', function () {",
                  "  pm.expect([200]).to.include(pm.response.code);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const DISALLOWED = new Set(['running','success','error']);",
                  "",
                  "function validateConsciousnessState(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(validateConsciousnessState); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Consciousness forbidden status: ${v}`);",
                  "        pm.expect(v !== 'active').to.eql(true, 'Consciousness status cannot be active');",
                  "      }",
                  "      validateConsciousnessState(v);",
                  "    });",
                  "  }",
                  "}",
                  "validateConsciousnessState(json);"
                ],
                "_lastExecutionId": "b8127a28-0f21-4620-a3c4-cf34840ce567"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "consciousness",
              "state"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3ebcc296-d944-4d28-97c4-990646e0b8e4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "bd88be53-8be6-4290-a08f-cc7c9c0d5d79",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:47 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "146"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-trace-id",
              "value": "612c6a55-53c0-47a8-ac7a-7efb262ca299"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              105,
              100,
              108,
              101,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              56,
              84,
              48,
              56,
              58,
              48,
              55,
              58,
              53,
              54,
              46,
              51,
              48,
              55,
              50,
              53,
              57,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              103,
              111,
              97,
              108,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              103,
              111,
              97,
              108,
              95,
              115,
              116,
              97,
              99,
              107,
              34,
              58,
              91,
              93,
              44,
              34,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              95,
              110,
              101,
              120,
              116,
              95,
              115,
              116,
              97,
              116,
              101,
              115,
              34,
              58,
              91,
              34,
              102,
              111,
              99,
              117,
              115,
              105,
              110,
              103,
              34,
              44,
              34,
              115,
              108,
              101,
              101,
              112,
              105,
              110,
              103,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 146
        },
        "id": "296aad95-a9ea-4732-97d0-c757565a108c",
        "assertions": [
          {
            "assertion": "State GET endpoint responds",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5e775a9f-0601-4ecf-9d4b-99a13532a1ab",
          "length": 12,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "34a06a35-bc16-4132-9128-8a3a146c80f0"
        },
        "item": {
          "id": "0aa7320d-3aac-4e4c-8812-6b14bbab9574",
          "name": "Experience Rules POST",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "experience",
                "rules"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"title\": \"test rule\", \"content\": \"test rule content\", \"category\": \"test\", \"tags\": [\"test\"], \"sources\": [\"integration_test\"]}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a11b768c-1fbc-466d-9877-4dbf2d3883b3",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Experience rules POST endpoint responds', function () {",
                  "  pm.expect([200,201]).to.include(pm.response.code);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const EXPERIENCE_ALLOWED = new Set(['active','deprecated','draft']);",
                  "",
                  "function validateExperienceStatus(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(validateExperienceStatus); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        // Experience rules can use 'active' (enable/disable semantics)",
                  "        pm.expect(EXPERIENCE_ALLOWED.has(v)).to.eql(true, `ExperienceRule invalid status: ${v}`);",
                  "      }",
                  "      validateExperienceStatus(v);",
                  "    });",
                  "  }",
                  "}",
                  "validateExperienceStatus(json);",
                  "pm.test('Experience rule status validation passed', function () { pm.expect(true).to.be.true; });"
                ],
                "_lastExecutionId": "1e0b6072-9045-4319-b229-ed556c13a109"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "experience",
              "rules"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "73d15fcc-f9af-4d37-809b-303d89627829",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "125",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"title\": \"test rule\", \"content\": \"test rule content\", \"category\": \"test\", \"tags\": [\"test\"], \"sources\": [\"integration_test\"]}"
          }
        },
        "response": {
          "id": "f368c610-8b22-41cf-a8d2-2f0dcc647f04",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:48 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "400"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-trace-id",
              "value": "aafc64a2-25a9-471c-af66-d9ac9ecd5016"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              51,
              102,
              100,
              97,
              101,
              54,
              56,
              45,
              54,
              52,
              54,
              98,
              45,
              52,
              56,
              53,
              54,
              45,
              56,
              53,
              56,
              99,
              45,
              56,
              99,
              56,
              56,
              50,
              48,
              100,
              51,
              51,
              98,
              48,
              99,
              34,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              32,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              32,
              114,
              117,
              108,
              101,
              32,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              44,
              34,
              116,
              97,
              103,
              115,
              34,
              58,
              91,
              34,
              116,
              101,
              115,
              116,
              34,
              93,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              34,
              58,
              91,
              34,
              105,
              110,
              116,
              101,
              103,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              116,
              101,
              115,
              116,
              34,
              93,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              118,
              49,
              34,
              44,
              34,
              99,
              111,
              110,
              102,
              105,
              100,
              101,
              110,
              99,
              101,
              34,
              58,
              48,
              46,
              55,
              44,
              34,
              119,
              101,
              105,
              103,
              104,
              116,
              34,
              58,
              49,
              46,
              48,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              56,
              84,
              48,
              57,
              58,
              53,
              53,
              58,
              52,
              56,
              46,
              51,
              54,
              50,
              55,
              53,
              54,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              56,
              84,
              48,
              57,
              58,
              53,
              53,
              58,
              52,
              56,
              46,
              51,
              54,
              50,
              55,
              53,
              54,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              34,
              56,
              97,
              52,
              50,
              52,
              49,
              51,
              100,
              53,
              55,
              51,
              53,
              54,
              50,
              53,
              55,
              50,
              98,
              52,
              102,
              49,
              99,
              56,
              49,
              54,
              99,
              54,
              53,
              49,
              57,
              55,
              54,
              49,
              100,
              50,
              101,
              100,
              57,
              52,
              52,
              100,
              100,
              50,
              54,
              101,
              51,
              102,
              98,
              54,
              102,
              57,
              57,
              97,
              50,
              100,
              48,
              101,
              100,
              56,
              51,
              102,
              57,
              50,
              98,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 400
        },
        "id": "0aa7320d-3aac-4e4c-8812-6b14bbab9574",
        "assertions": [
          {
            "assertion": "Experience rules POST endpoint responds",
            "skipped": false
          },
          {
            "assertion": "Experience rule status validation passed",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "025e3519-5b33-49b4-8bd6-149ba58d0b41",
          "length": 12,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "11e4b345-ed7d-4d48-82ff-8dde03ba6db2"
        },
        "item": {
          "id": "99623aef-e0c8-490b-a1a5-42e445604bfe",
          "name": "Experience Candidates GET",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "experience",
                "candidates"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "588e424e-0c8a-4e0f-923a-e87f7b1b5a81",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Experience candidates endpoint responds', function () {",
                  "  pm.expect([200]).to.include(pm.response.code);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const EXPERIENCE_ALLOWED = new Set(['active','deprecated','draft']);",
                  "",
                  "function validateCandidateStatus(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(validateCandidateStatus); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        pm.expect(EXPERIENCE_ALLOWED.has(v)).to.eql(true, `Candidate invalid status: ${v}`);",
                  "      }",
                  "      validateCandidateStatus(v);",
                  "    });",
                  "  }",
                  "}",
                  "validateCandidateStatus(json);"
                ],
                "_lastExecutionId": "f683a0de-ef58-4ceb-a784-9e3312760a04"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "experience",
              "candidates"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "030c7594-10ad-48fb-9776-a16fb7f127f7",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "a8eaad09-18b9-41c7-be2f-3849d215f4ba",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:48 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "455"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-trace-id",
              "value": "c241c9e1-43ef-4f81-85b2-0b532377bbb7"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              49,
              44,
              34,
              114,
              101,
              116,
              117,
              114,
              110,
              101,
              100,
              34,
              58,
              49,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              52,
              49,
              102,
              50,
              97,
              97,
              52,
              45,
              97,
              57,
              52,
              50,
              45,
              52,
              98,
              54,
              102,
              45,
              97,
              48,
              101,
              102,
              45,
              53,
              100,
              57,
              56,
              100,
              98,
              55,
              102,
              54,
              56,
              55,
              100,
              34,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              114,
              101,
              103,
              95,
              100,
              114,
              97,
              102,
              116,
              95,
              49,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              95,
              49,
              34,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              34,
              103,
              101,
              110,
              101,
              114,
              97,
              108,
              34,
              44,
              34,
              116,
              97,
              103,
              115,
              34,
              58,
              91,
              93,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              34,
              58,
              91,
              93,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              118,
              49,
              34,
              44,
              34,
              99,
              111,
              110,
              102,
              105,
              100,
              101,
              110,
              99,
              101,
              34,
              58,
              48,
              46,
              55,
              44,
              34,
              119,
              101,
              105,
              103,
              104,
              116,
              34,
              58,
              49,
              46,
              48,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              100,
              114,
              97,
              102,
              116,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              51,
              58,
              53,
              50,
              58,
              50,
              56,
              46,
              56,
              51,
              55,
              48,
              53,
              49,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              56,
              84,
              48,
              56,
              58,
              48,
              55,
              58,
              53,
              54,
              46,
              51,
              52,
              53,
              52,
              49,
              55,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              34,
              51,
              99,
              52,
              48,
              100,
              101,
              102,
              55,
              57,
              101,
              54,
              99,
              98,
              49,
              54,
              48,
              51,
              56,
              97,
              50,
              48,
              101,
              52,
              99,
              99,
              101,
              54,
              98,
              101,
              102,
              53,
              101,
              99,
              54,
              98,
              101,
              97,
              101,
              48,
              101,
              50,
              102,
              52,
              48,
              100,
              101,
              98,
              57,
              54,
              57,
              101,
              49,
              55,
              55,
              98,
              99,
              101,
              49,
              98,
              100,
              102,
              49,
              52,
              101,
              34,
              125,
              93,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              56,
              84,
              48,
              57,
              58,
              53,
              53,
              58,
              52,
              56,
              46,
              57,
              56,
              49,
              57,
              51,
              52,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 455
        },
        "id": "99623aef-e0c8-490b-a1a5-42e445604bfe",
        "assertions": [
          {
            "assertion": "Experience candidates endpoint responds",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0fa31b8d-296e-4680-8af6-853e6c1e35a3",
          "length": 12,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "22f3c9fe-7467-402c-ab93-ddd24937bf9c"
        },
        "item": {
          "id": "6735f2d0-95e5-496c-8565-9def1f895244",
          "name": "Cloud Status",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "cloud",
                "status"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "key": "user_id",
                  "value": "test-user"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e8c36bbe-5479-41d8-8bd2-fbf57a2bf3c3",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Cloud status endpoint responds', function () {",
                  "  pm.expect([200]).to.include(pm.response.code);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const DISALLOWED = new Set(['running','success','error']);",
                  "const CLOUD_STATUS_ALLOWED = new Set(['connected','disconnected','syncing','error']);",
                  "",
                  "function validateCloudStatus(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(validateCloudStatus); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Cloud forbidden status: ${v}`);",
                  "        pm.expect(v !== 'active').to.eql(true, 'Cloud status cannot be active');",
                  "      }",
                  "      validateCloudStatus(v);",
                  "    });",
                  "  }",
                  "}",
                  "validateCloudStatus(json);"
                ],
                "_lastExecutionId": "664139c2-27ac-4771-84b5-31f5ab4ff72b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "cloud",
              "status"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "user_id",
                "value": "test-user"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1454615d-e9a6-4426-bcf1-bbaf9ffe1b78",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "1496dec7-d272-48ff-84dd-fdf0ba345d99",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:49 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "52"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-trace-id",
              "value": "33fd6e1e-4799-46e7-bee2-5dc3dc3e61c9"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              110,
              111,
              110,
              101,
              34,
              44,
              34,
              99,
              111,
              110,
              115,
              101,
              110,
              116,
              95,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              115,
              99,
              111,
              112,
              101,
              115,
              34,
              58,
              91,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 52
        },
        "id": "6735f2d0-95e5-496c-8565-9def1f895244",
        "assertions": [
          {
            "assertion": "Cloud status endpoint responds",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ddfdb7e0-5675-41eb-a879-c9435e4d44d8",
          "length": 12,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "05e5e674-cc70-451a-be8e-c6fbf81d5645"
        },
        "item": {
          "id": "d8374af6-a64f-49b1-8c67-2d77faa57122",
          "name": "Observability Metrics",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "observability",
                "metrics"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a348cf08-136c-4944-abb1-99c418d1cb33",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Metrics endpoint responds', function () {",
                  "  pm.expect([200]).to.include(pm.response.code);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const DISALLOWED = new Set(['running','success','error']);",
                  "",
                  "function validateMetricsStatus(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(validateMetricsStatus); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Metrics forbidden status: ${v}`);",
                  "        pm.expect(v !== 'active').to.eql(true, 'Metrics status cannot be active');",
                  "      }",
                  "      validateMetricsStatus(v);",
                  "    });",
                  "  }",
                  "}",
                  "validateMetricsStatus(json);",
                  "pm.test('Metrics status validation completed', function () { pm.expect(true).to.be.true; });"
                ],
                "_lastExecutionId": "8382ca32-2870-4498-a74c-b11945ea57eb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "observability",
              "metrics"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2729468f-7d80-4df6-81eb-28ad9355c291",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "5b014b69-48b9-4984-98a2-1f559dc336ae",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:49 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "4537"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-trace-id",
              "value": "8c60ea3a-93d9-412e-8ae2-a045490ca0db"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              101,
              120,
              112,
              101,
              114,
              105,
              101,
              110,
              99,
              101,
              95,
              115,
              110,
              97,
              112,
              115,
              104,
              111,
              116,
              95,
              108,
              111,
              97,
              100,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              49,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              101,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              57,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              97,
              103,
              101,
              110,
              116,
              115,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              124,
              52,
              48,
              52,
              34,
              58,
              53,
              44,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              49,
              48,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              99,
              108,
              111,
              117,
              100,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              124,
              52,
              50,
              50,
              34,
              58,
              52,
              44,
              34,
              97,
              116,
              116,
              101,
              110,
              116,
              105,
              111,
              110,
              95,
              103,
              101,
              116,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              53,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              99,
              111,
              110,
              115,
              99,
              105,
              111,
              117,
              115,
              110,
              101,
              115,
              115,
              47,
              97,
              116,
              116,
              101,
              110,
              116,
              105,
              111,
              110,
              124,
              50,
              48,
              48,
              34,
              58,
              53,
              44,
              34,
              99,
              111,
              110,
              115,
              99,
              105,
              111,
              117,
              115,
              110,
              101,
              115,
              115,
              95,
              103,
              101,
              116,
              95,
              115,
              116,
              97,
              116,
              101,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              53,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              99,
              111,
              110,
              115,
              99,
              105,
              111,
              117,
              115,
              110,
              101,
              115,
              115,
              47,
              115,
              116,
              97,
              116,
              101,
              124,
              50,
              48,
              48,
              34,
              58,
              53,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              101,
              120,
              101,
              99,
              117,
              116,
              105,
              111,
              110,
              47,
              97,
              99,
              116,
              124,
              50,
              48,
              48,
              34,
              58,
              53,
              44,
              34,
              101,
              120,
              112,
              101,
              114,
              105,
              101,
              110,
              99,
              101,
              95,
              99,
              97,
              110,
              100,
              105,
              100,
              97,
              116,
              101,
              95,
              115,
              101,
              97,
              114,
              99,
              104,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              53,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              101,
              120,
              112,
              101,
              114,
              105,
              101,
              110,
              99,
              101,
              47,
              99,
              97,
              110,
              100,
              105,
              100,
              97,
              116,
              101,
              115,
              124,
              50,
              48,
              48,
              34,
              58,
              53,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              101,
              120,
              112,
              101,
              114,
              105,
              101,
              110,
              99,
              101,
              47,
              114,
              117,
              108,
              101,
              115,
              124,
              52,
              50,
              50,
              34,
              58,
              52,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              109,
              101,
              109,
              111,
              114,
              121,
              47,
              101,
              120,
              112,
              111,
              114,
              116,
              124,
              52,
              48,
              53,
              34,
              58,
              50,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              109,
              101,
              109,
              111,
              114,
              121,
              47,
              115,
              121,
              110,
              99,
              124,
              52,
              50,
              50,
              34,
              58,
              50,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              111,
              98,
              115,
              101,
              114,
              118,
              97,
              98,
              105,
              108,
              105,
              116,
              121,
              47,
              108,
              111,
              103,
              115,
              47,
              115,
              101,
              97,
              114,
              99,
              104,
              124,
              52,
              48,
              53,
              34,
              58,
              50,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              111,
              98,
              115,
              101,
              114,
              118,
              97,
              98,
              105,
              108,
              105,
              116,
              121,
              47,
              109,
              101,
              116,
              114,
              105,
              99,
              115,
              124,
              50,
              48,
              48,
              34,
              58,
              52,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              114,
              101,
              97,
              115,
              111,
              110,
              105,
              110,
              103,
              47,
              112,
              108,
              97,
              110,
              124,
              50,
              48,
              48,
              34,
              58,
              53,
              44,
              34,
              109,
              101,
              109,
              111,
              114,
              121,
              95,
              115,
              121,
              110,
              99,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              51,
              44,
              34,
              109,
              101,
              109,
              111,
              114,
              121,
              95,
              105,
              116,
              101,
              109,
              115,
              95,
              115,
              121,
              110,
              99,
              101,
              100,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              51,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              109,
              101,
              109,
              111,
              114,
              121,
              47,
              115,
              121,
              110,
              99,
              124,
              50,
              48,
              48,
              34,
              58,
              51,
              44,
              34,
              109,
              101,
              109,
              111,
              114,
              121,
              95,
              101,
              120,
              112,
              111,
              114,
              116,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              51,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              109,
              101,
              109,
              111,
              114,
              121,
              47,
              101,
              120,
              112,
              111,
              114,
              116,
              124,
              50,
              48,
              48,
              34,
              58,
              51,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              111,
              98,
              115,
              101,
              114,
              118,
              97,
              98,
              105,
              108,
              105,
              116,
              121,
              47,
              108,
              111,
              103,
              115,
              47,
              115,
              101,
              97,
              114,
              99,
              104,
              124,
              50,
              48,
              48,
              34,
              58,
              50,
              44,
              34,
              101,
              120,
              112,
              101,
              114,
              105,
              101,
              110,
              99,
              101,
              95,
              114,
              117,
              108,
              101,
              95,
              97,
              100,
              100,
              101,
              100,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              49,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              101,
              120,
              112,
              101,
              114,
              105,
              101,
              110,
              99,
              101,
              47,
              114,
              117,
              108,
              101,
              115,
              124,
              50,
              48,
              48,
              34,
              58,
              49,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              99,
              108,
              111,
              117,
              100,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              124,
              50,
              48,
              48,
              34,
              58,
              49,
              125,
              44,
              34,
              116,
              105,
              109,
              105,
              110,
              103,
              115,
              34,
              58,
              123,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              97,
              103,
              101,
              110,
              116,
              115,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              54,
              48,
              54,
              54,
              50,
              48,
              48,
              48,
              57,
              48,
              53,
              55,
              50,
              50,
              51,
              56,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              50,
              53,
              55,
              57,
              48,
              48,
              48,
              51,
              50,
              50,
              49,
              52,
              56,
              50,
              48,
              52,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              51,
              57,
              50,
              57,
              48,
              48,
              48,
              56,
              49,
              51,
              53,
              49,
              51,
              57,
              57,
              52,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              50,
              53,
              55,
              57,
              48,
              48,
              48,
              51,
              50,
              50,
              49,
              52,
              56,
              50,
              48,
              52,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              99,
              108,
              111,
              117,
              100,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              54,
              49,
              48,
              54,
              56,
              48,
              48,
              51,
              57,
              57,
              55,
              50,
              48,
              54,
              54,
              57,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              55,
              57,
              57,
              51,
              48,
              48,
              48,
              51,
              50,
              54,
              54,
              55,
              56,
              49,
              53,
              55,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              52,
              51,
              50,
              57,
              48,
              48,
              48,
              51,
              54,
              54,
              56,
              53,
              49,
              54,
              56,
              55,
              52,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              55,
              57,
              57,
              51,
              48,
              48,
              48,
              51,
              50,
              54,
              54,
              55,
              56,
              49,
              53,
              55,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              99,
              111,
              110,
              115,
              99,
              105,
              111,
              117,
              115,
              110,
              101,
              115,
              115,
              47,
              97,
              116,
              116,
              101,
              110,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              52,
              48,
              57,
              50,
              48,
              48,
              48,
              54,
              53,
              55,
              54,
              57,
              50,
              53,
              53,
              49,
              54,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              53,
              49,
              56,
              53,
              48,
              48,
              49,
              48,
              54,
              52,
              48,
              57,
              49,
              57,
              50,
              49,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              51,
              53,
              48,
              57,
              48,
              48,
              49,
              49,
              48,
              55,
              56,
              56,
              54,
              52,
              51,
              51,
              54,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              53,
              49,
              56,
              53,
              48,
              48,
              49,
              48,
              54,
              52,
              48,
              57,
              49,
              57,
              50,
              49,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              99,
              111,
              110,
              115,
              99,
              105,
              111,
              117,
              115,
              110,
              101,
              115,
              115,
              47,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              53,
              50,
              56,
              48,
              54,
              48,
              48,
              49,
              54,
              50,
              50,
              50,
              50,
              57,
              56,
              49,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              55,
              49,
              52,
              49,
              57,
              57,
              57,
              54,
              54,
              55,
              53,
              49,
              48,
              51,
              57,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              51,
              53,
              56,
              55,
              57,
              57,
              57,
              51,
              56,
              49,
              49,
              50,
              52,
              57,
              55,
              51,
              51,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              55,
              49,
              52,
              49,
              57,
              57,
              57,
              54,
              54,
              55,
              53,
              49,
              48,
              51,
              57,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              101,
              120,
              101,
              99,
              117,
              116,
              105,
              111,
              110,
              47,
              97,
              99,
              116,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              56,
              48,
              48,
              54,
              52,
              48,
              48,
              49,
              57,
              53,
              56,
              56,
              49,
              55,
              50,
              52,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              51,
              53,
              55,
              54,
              48,
              48,
              48,
              57,
              50,
              56,
              56,
              55,
              56,
              55,
              56,
              52,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              53,
              50,
              48,
              49,
              48,
              48,
              48,
              48,
              50,
              49,
              55,
              55,
              48,
              53,
              57,
              55,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              51,
              53,
              55,
              54,
              48,
              48,
              48,
              57,
              50,
              56,
              56,
              55,
              56,
              55,
              56,
              52,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              101,
              120,
              112,
              101,
              114,
              105,
              101,
              110,
              99,
              101,
              47,
              99,
              97,
              110,
              100,
              105,
              100,
              97,
              116,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              55,
              53,
              48,
              49,
              52,
              48,
              48,
              48,
              55,
              53,
              56,
              53,
              50,
              56,
              55,
              49,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              49,
              49,
              57,
              51,
              48,
              48,
              48,
              50,
              52,
              53,
              56,
              51,
              57,
              51,
              53,
              55,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              53,
              48,
              57,
              51,
              48,
              48,
              48,
              51,
              54,
              51,
              53,
              53,
              56,
              53,
              51,
              49,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              49,
              49,
              57,
              51,
              48,
              48,
              48,
              50,
              52,
              53,
              56,
              51,
              57,
              51,
              53,
              55,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              101,
              120,
              112,
              101,
              114,
              105,
              101,
              110,
              99,
              101,
              47,
              114,
              117,
              108,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              54,
              48,
              56,
              53,
              56,
              48,
              48,
              48,
              49,
              54,
              50,
              57,
              56,
              56,
              57,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              51,
              46,
              49,
              51,
              55,
              56,
              48,
              48,
              48,
              50,
              55,
              54,
              49,
              54,
              51,
              50,
              50,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              53,
              53,
              49,
              52,
              48,
              48,
              48,
              48,
              55,
              54,
              56,
              48,
              48,
              53,
              56,
              53,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              51,
              46,
              49,
              51,
              55,
              56,
              48,
              48,
              48,
              50,
              55,
              54,
              49,
              54,
              51,
              50,
              50,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              109,
              101,
              109,
              111,
              114,
              121,
              47,
              101,
              120,
              112,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              50,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              52,
              49,
              48,
              53,
              52,
              57,
              57,
              56,
              50,
              57,
              49,
              54,
              53,
              54,
              51,
              55,
              53,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              53,
              52,
              56,
              56,
              57,
              57,
              57,
              56,
              56,
              54,
              52,
              51,
              56,
              50,
              53,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              50,
              55,
              50,
              49,
              57,
              57,
              57,
              55,
              55,
              49,
              56,
              57,
              51,
              48,
              50,
              52,
              52,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              53,
              52,
              56,
              56,
              57,
              57,
              57,
              56,
              56,
              54,
              52,
              51,
              56,
              50,
              53,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              109,
              101,
              109,
              111,
              114,
              121,
              47,
              115,
              121,
              110,
              99,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              53,
              51,
              57,
              50,
              50,
              48,
              48,
              48,
              56,
              57,
              57,
              57,
              49,
              48,
              57,
              51,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              51,
              46,
              52,
              53,
              50,
              51,
              48,
              48,
              48,
              57,
              52,
              48,
              54,
              56,
              48,
              53,
              48,
              52,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              54,
              50,
              54,
              48,
              57,
              57,
              57,
              57,
              52,
              52,
              48,
              54,
              49,
              48,
              52,
              49,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              51,
              46,
              52,
              53,
              50,
              51,
              48,
              48,
              48,
              57,
              52,
              48,
              54,
              56,
              48,
              53,
              48,
              52,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              111,
              98,
              115,
              101,
              114,
              118,
              97,
              98,
              105,
              108,
              105,
              116,
              121,
              47,
              108,
              111,
              103,
              115,
              47,
              115,
              101,
              97,
              114,
              99,
              104,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              50,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              52,
              50,
              52,
              51,
              52,
              57,
              57,
              49,
              51,
              51,
              55,
              51,
              53,
              56,
              57,
              53,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              52,
              54,
              48,
              53,
              57,
              57,
              56,
              57,
              56,
              51,
              54,
              48,
              54,
              54,
              57,
              54,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              51,
              56,
              56,
              48,
              57,
              57,
              57,
              50,
              56,
              51,
              56,
              54,
              53,
              48,
              57,
              52,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              52,
              54,
              48,
              53,
              57,
              57,
              56,
              57,
              56,
              51,
              54,
              48,
              54,
              54,
              57,
              54,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              111,
              98,
              115,
              101,
              114,
              118,
              97,
              98,
              105,
              108,
              105,
              116,
              121,
              47,
              109,
              101,
              116,
              114,
              105,
              99,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              52,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              50,
              50,
              53,
              51,
              55,
              52,
              57,
              51,
              48,
              48,
              55,
              50,
              53,
              55,
              53,
              56,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              50,
              46,
              48,
              51,
              54,
              53,
              57,
              57,
              57,
              48,
              56,
              48,
              50,
              52,
              48,
              55,
              50,
              54,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              53,
              51,
              57,
              53,
              57,
              57,
              57,
              49,
              55,
              56,
              50,
              57,
              48,
              51,
              54,
              55,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              50,
              46,
              48,
              51,
              54,
              53,
              57,
              57,
              57,
              48,
              56,
              48,
              50,
              52,
              48,
              55,
              50,
              54,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              80,
              79,
              83,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              114,
              101,
              97,
              115,
              111,
              110,
              105,
              110,
              103,
              47,
              112,
              108,
              97,
              110,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              50,
              52,
              54,
              51,
              51,
              57,
              57,
              57,
              48,
              55,
              53,
              55,
              52,
              48,
              53,
              56,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              55,
              53,
              53,
              53,
              57,
              57,
              57,
              56,
              48,
              50,
              52,
              50,
              53,
              53,
              48,
              52,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              57,
              53,
              50,
              51,
              57,
              57,
              57,
              49,
              55,
              56,
              55,
              56,
              50,
              49,
              48,
              53,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              55,
              53,
              53,
              53,
              57,
              57,
              57,
              56,
              48,
              50,
              52,
              50,
              53,
              53,
              48,
              52,
              125,
              44,
              34,
              109,
              101,
              109,
              111,
              114,
              121,
              95,
              115,
              121,
              110,
              99,
              95,
              109,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              51,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              48,
              49,
              48,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              48,
              49,
              51,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              48,
              48,
              57,
              48,
              48,
              48,
              48,
              48,
              48,
              48,
              48,
              48,
              48,
              48,
              48,
              48,
              48,
              49,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              48,
              49,
              51,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              109,
              101,
              109,
              111,
              114,
              121,
              47,
              101,
              120,
              112,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              51,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              53,
              54,
              50,
              57,
              51,
              51,
              51,
              53,
              49,
              50,
              50,
              51,
              54,
              54,
              55,
              53,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              55,
              49,
              49,
              56,
              48,
              48,
              48,
              54,
              52,
              56,
              57,
              49,
              53,
              55,
              54,
              56,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              52,
              55,
              50,
              55,
              57,
              57,
              57,
              57,
              49,
              50,
              53,
              55,
              52,
              56,
              56,
              55,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              55,
              49,
              49,
              56,
              48,
              48,
              48,
              54,
              52,
              56,
              57,
              49,
              53,
              55,
              54,
              56,
              125,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              109,
              115,
              124,
              71,
              69,
              84,
              124,
              47,
              97,
              112,
              105,
              47,
              118,
              50,
              46,
              51,
              45,
              112,
              114,
              101,
              118,
              105,
              101,
              119,
              47,
              111,
              98,
              115,
              101,
              114,
              118,
              97,
              98,
              105,
              108,
              105,
              116,
              121,
              47,
              108,
              111,
              103,
              115,
              47,
              115,
              101,
              97,
              114,
              99,
              104,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              50,
              46,
              48,
              44,
              34,
              97,
              118,
              103,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              57,
              48,
              53,
              56,
              52,
              57,
              57,
              55,
              48,
              56,
              55,
              55,
              49,
              55,
              48,
              54,
              44,
              34,
              112,
              57,
              53,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              50,
              52,
              48,
              49,
              48,
              48,
              48,
              49,
              51,
              48,
              57,
              50,
              49,
              54,
              48,
              50,
              44,
              34,
              109,
              105,
              110,
              95,
              109,
              115,
              34,
              58,
              48,
              46,
              53,
              55,
              49,
              53,
              57,
              57,
              57,
              50,
              56,
              54,
              54,
              50,
              49,
              56,
              48,
              57,
              44,
              34,
              109,
              97,
              120,
              95,
              109,
              115,
              34,
              58,
              49,
              46,
              50,
              52,
              48,
              49,
              48,
              48,
              48,
              49,
              51,
              48,
              57,
              50,
              49,
              54,
              48,
              50,
              125,
              125,
              44,
              34,
              103,
              97,
              117,
              103,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              115,
              99,
              105,
              111,
              117,
              115,
              110,
              101,
              115,
              115,
              95,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              48,
              46,
              48,
              44,
              34,
              97,
              116,
              116,
              101,
              110,
              116,
              105,
              111,
              110,
              95,
              115,
              116,
              97,
              99,
              107,
              95,
              115,
              105,
              122,
              101,
              34,
              58,
              48,
              46,
              48,
              44,
              34,
              101,
              120,
              112,
              101,
              114,
              105,
              101,
              110,
              99,
              101,
              95,
              114,
              117,
              108,
              101,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              52,
              46,
              48,
              44,
              34,
              101,
              120,
              112,
              101,
              114,
              105,
              101,
              110,
              99,
              101,
              95,
              99,
              97,
              110,
              100,
              105,
              100,
              97,
              116,
              101,
              115,
              95,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              49,
              46,
              48,
              125,
              44,
              34,
              108,
              97,
              98,
              101,
              108,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              115,
              99,
              105,
              111,
              117,
              115,
              110,
              101,
              115,
              115,
              95,
              115,
              116,
              97,
              116,
              101,
              95,
              108,
              97,
              98,
              101,
              108,
              34,
              58,
              34,
              105,
              100,
              108,
              101,
              34,
              125,
              44,
              34,
              119,
              105,
              110,
              100,
              111,
              119,
              34,
              58,
              50,
              48,
              48,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              56,
              84,
              48,
              57,
              58,
              53,
              53,
              58,
              53,
              48,
              46,
              49,
              57,
              50,
              54,
              53,
              48,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 4537
        },
        "id": "d8374af6-a64f-49b1-8c67-2d77faa57122",
        "assertions": [
          {
            "assertion": "Metrics endpoint responds",
            "skipped": false
          },
          {
            "assertion": "Metrics status validation completed",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "834ea2eb-14a7-4da3-bf63-f8eb3f2de0c2",
          "length": 12,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "05950116-fc7e-4958-8c1f-bc77a9434684"
        },
        "item": {
          "id": "78c5187e-ab95-4323-95ab-756bd99328d7",
          "name": "Observability Logs Search",
          "request": {
            "url": {
              "path": [
                "api",
                "v2.3-preview",
                "observability",
                "logs",
                "search"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "test"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e65867cd-7b8e-498e-a552-17aa211c1289",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Logs search endpoint responds', function () {",
                  "  pm.expect([200]).to.include(pm.response.code);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) { json = {}; }",
                  "",
                  "const DISALLOWED = new Set(['running','success','error']);",
                  "",
                  "function validateLogsStatus(obj) {",
                  "  if (obj === null || obj === undefined) return;",
                  "  if (Array.isArray(obj)) { obj.forEach(validateLogsStatus); return; }",
                  "  if (typeof obj === 'object') {",
                  "    Object.keys(obj).forEach(k => {",
                  "      const v = obj[k];",
                  "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                  "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Logs forbidden status: ${v}`);",
                  "        pm.expect(v !== 'active').to.eql(true, 'Logs status cannot be active');",
                  "      }",
                  "      validateLogsStatus(v);",
                  "    });",
                  "  }",
                  "}",
                  "validateLogsStatus(json);"
                ],
                "_lastExecutionId": "7ef05e6c-c461-4dd1-abe2-069f794ed46d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v2.3-preview",
              "observability",
              "logs",
              "search"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "q",
                "value": "test"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e06dfa7c-8eee-4136-afab-1f2a964dfaf1",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "c3d0a908-ef6a-4d8b-a209-26216a438a83",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Thu, 28 Aug 2025 09:55:50 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "83"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-trace-id",
              "value": "846046d1-4abd-425c-9326-56070b0d755f"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              48,
              44,
              34,
              114,
              101,
              116,
              117,
              114,
              110,
              101,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              93,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              56,
              84,
              48,
              57,
              58,
              53,
              53,
              58,
              53,
              48,
              46,
              56,
              48,
              56,
              57,
              50,
              50,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 83
        },
        "id": "78c5187e-ab95-4323-95ab-756bd99328d7",
        "assertions": [
          {
            "assertion": "Logs search endpoint responds",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 6541
    },
    "failures": [],
    "error": null
  }
}