{
  "openapi": "3.0.3",
  "info": {
    "title": "Starriver SuperBrain API",
    "description": "Minimal runnable V2.3 API skeleton",
    "version": "v2.3-preview"
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/consciousness/attention": {
      "get": {
        "tags": [
          "consciousness"
        ],
        "summary": "Get Attention",
        "operationId": "get_attention_api_v2_3_preview_consciousness_attention_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttentionResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "consciousness"
        ],
        "summary": "Set Attention",
        "operationId": "set_attention_api_v2_3_preview_consciousness_attention_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttentionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttentionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/consciousness/state": {
      "get": {
        "tags": [
          "consciousness"
        ],
        "summary": "Get State",
        "operationId": "get_state_api_v2_3_preview_consciousness_state_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "consciousness"
        ],
        "summary": "Set State",
        "operationId": "set_state_api_v2_3_preview_consciousness_state_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/memory/sync": {
      "post": {
        "tags": [
          "memory"
        ],
        "summary": "Memory Sync",
        "operationId": "memory_sync_api_v2_3_preview_memory_sync_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemorySyncRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemorySyncResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/memory/export": {
      "get": {
        "tags": [
          "memory"
        ],
        "summary": "Memory Export",
        "operationId": "memory_export_api_v2_3_preview_memory_export_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryExportResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "memory"
        ],
        "summary": "Memory Export Post",
        "operationId": "memory_export_post_api_v2_3_preview_memory_export_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoryExportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryExportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/reasoning/plan": {
      "post": {
        "tags": [
          "reasoning"
        ],
        "summary": "Create Plan",
        "operationId": "create_plan_api_v2_3_preview_reasoning_plan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/execution/act": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Act",
        "operationId": "act_api_v2_3_preview_execution_act_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/cloud/consent": {
      "post": {
        "tags": [
          "cloud"
        ],
        "summary": "Create Consent",
        "operationId": "create_consent_api_v2_3_preview_cloud_consent_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "cloud"
        ],
        "summary": "Revoke Consent",
        "operationId": "revoke_consent_api_v2_3_preview_cloud_consent_delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User ID to revoke consent for",
              "title": "User Id"
            },
            "description": "User ID to revoke consent for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/cloud/status": {
      "get": {
        "tags": [
          "cloud"
        ],
        "summary": "Consent Status",
        "operationId": "consent_status_api_v2_3_preview_cloud_status_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID to get consent status for",
              "title": "User Id"
            },
            "description": "User ID to get consent status for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/experience/rules": {
      "post": {
        "tags": [
          "experience"
        ],
        "summary": "Add Rule",
        "operationId": "add_rule_api_v2_3_preview_experience_rules_post",
        "parameters": [
          {
            "name": "dedup",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Dedup"
            }
          },
          {
            "name": "upsert",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Upsert"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/experience/rules/{rule_id}": {
      "get": {
        "tags": [
          "experience"
        ],
        "summary": "Get Rule",
        "operationId": "get_rule_api_v2_3_preview_experience_rules__rule_id__get",
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "experience"
        ],
        "summary": "Update Rule",
        "operationId": "update_rule_api_v2_3_preview_experience_rules__rule_id__put",
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "experience"
        ],
        "summary": "Delete Rule",
        "operationId": "delete_rule_api_v2_3_preview_experience_rules__rule_id__delete",
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/experience/candidates": {
      "post": {
        "tags": [
          "experience"
        ],
        "summary": "Add Candidate",
        "operationId": "add_candidate_api_v2_3_preview_experience_candidates_post",
        "parameters": [
          {
            "name": "dedup",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Dedup"
            }
          },
          {
            "name": "upsert",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Upsert"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperienceRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "experience"
        ],
        "summary": "List Candidates",
        "operationId": "list_candidates_api_v2_3_preview_experience_candidates_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/experience/candidates/{rule_id}/approve": {
      "post": {
        "tags": [
          "experience"
        ],
        "summary": "Approve Candidate",
        "operationId": "approve_candidate_api_v2_3_preview_experience_candidates__rule_id__approve_post",
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/experience/candidates/{rule_id}/reject": {
      "post": {
        "tags": [
          "experience"
        ],
        "summary": "Reject Candidate",
        "operationId": "reject_candidate_api_v2_3_preview_experience_candidates__rule_id__reject_post",
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reason"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/experience/rules/search": {
      "get": {
        "tags": [
          "experience"
        ],
        "summary": "Search Rules",
        "operationId": "search_rules_api_v2_3_preview_experience_rules_search_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/experience/snapshot/export": {
      "get": {
        "tags": [
          "experience"
        ],
        "summary": "Export Snapshot",
        "operationId": "export_snapshot_api_v2_3_preview_experience_snapshot_export_get",
        "parameters": [
          {
            "name": "compact",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Compact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/experience/snapshot/import": {
      "post": {
        "tags": [
          "experience"
        ],
        "summary": "Import Snapshot",
        "operationId": "import_snapshot_api_v2_3_preview_experience_snapshot_import_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/experience/auto-candidate/config": {
      "get": {
        "tags": [
          "experience"
        ],
        "summary": "Get Auto Candidate Config",
        "operationId": "get_auto_candidate_config_api_v2_3_preview_experience_auto_candidate_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceAutoCandidateConfig"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "experience"
        ],
        "summary": "Update Auto Candidate Config",
        "operationId": "update_auto_candidate_config_api_v2_3_preview_experience_auto_candidate_config_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperienceAutoCandidateConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceAutoCandidateConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/experience/auto-candidate/harvest": {
      "post": {
        "tags": [
          "experience"
        ],
        "summary": "Harvest Auto Candidates",
        "operationId": "harvest_auto_candidates_api_v2_3_preview_experience_auto_candidate_harvest_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HarvestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/observability/metrics": {
      "get": {
        "tags": [
          "observability"
        ],
        "summary": "导出内存指标（Prometheus 文本格式）",
        "description": "返回应用内存中的 gauges/counters/timings 快照，便于监控采集（纯文本）。",
        "operationId": "metrics_export_api_v2_3_preview_observability_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/observability/logs/search": {
      "get": {
        "tags": [
          "observability"
        ],
        "summary": "Search Logs",
        "operationId": "search_logs_api_v2_3_preview_observability_logs_search_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "text or tag contains",
              "title": "Q"
            },
            "description": "text or tag contains"
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "INFO/WARN/ERROR",
              "title": "Level"
            },
            "description": "INFO/WARN/ERROR"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "since_seconds",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "default": 3600,
              "title": "Since Seconds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "observability"
        ],
        "summary": "Search Logs Post",
        "operationId": "search_logs_post_api_v2_3_preview_observability_logs_search_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/observability/assets": {
      "get": {
        "tags": [
          "observability"
        ],
        "summary": "Get Asset Inventory",
        "operationId": "get_asset_inventory_api_v2_3_preview_observability_assets_get",
        "parameters": [
          {
            "name": "since_seconds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 600,
              "title": "Since Seconds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetInventoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/observability/migration/plan": {
      "post": {
        "tags": [
          "observability"
        ],
        "summary": "Plan Migration",
        "operationId": "plan_migration_api_v2_3_preview_observability_migration_plan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrationPlanRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationPlanResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/observability/migration/execute": {
      "post": {
        "tags": [
          "observability"
        ],
        "summary": "Execute Migration",
        "operationId": "execute_migration_api_v2_3_preview_observability_migration_execute_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrationPlanRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationPlanResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/observability/dashboard/overview": {
      "get": {
        "tags": [
          "observability"
        ],
        "summary": "Dashboard 概要",
        "description": "返回瓷砖化概要数据，用于快速展示系统健康度与经验引擎概况。\n包含以下瓷砖：\n- rules：当前经验规则数 (int)\n- candidates：当前候选规则数 (int)\n- http_p95_ms：HTTP 请求 p95 延迟（毫秒，float）\n- logs：近10分钟内的日志条数 (int)\n- auto_candidate_last_created：最近一次自动收割创建的候选条数 (int)\n- auto_candidate_trend：最近最多20次自动收割的创建数趋势（array<int>，最早在前）\n- auto_candidate_sources_top：最近一次收割的来源分布 TopN（array<object>，元素包含 source(str)、count(int)）",
        "operationId": "dashboard_overview_api_v2_3_preview_observability_dashboard_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardOverview"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/observability/reflection/suggestions": {
      "get": {
        "tags": [
          "observability"
        ],
        "summary": "Reflection Suggestions",
        "operationId": "reflection_suggestions_api_v2_3_preview_observability_reflection_suggestions_get",
        "parameters": [
          {
            "name": "since_seconds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 900,
              "title": "Since Seconds"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "default": 5,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReflectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.3-preview/agents/status": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Get Agents Status",
        "description": "Return a minimal agents status payload that satisfies tests' enum checks.\nThe tests allow 200 or 204. When 200, any field named `status` must be in\nthe union of task_statuses and agent_health_statuses. We'll return:\n- top-level status: \"idle\" (agent health allowed)\n- health.status: \"idle\"\n- one task with status: \"pending\" (task allowed)",
        "operationId": "get_agents_status_api_v2_3_preview_agents_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentsStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "meta"
        ],
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActRequest": {
        "properties": {
          "action": {
            "type": "string",
            "title": "Action"
          },
          "params": {
            "type": "object",
            "title": "Params",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "action"
        ],
        "title": "ActRequest"
      },
      "ActResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "output": {
            "type": "object",
            "title": "Output"
          }
        },
        "type": "object",
        "required": [
          "success",
          "output"
        ],
        "title": "ActResponse"
      },
      "AgentHealth": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "last_check": {
            "type": "string",
            "title": "Last Check"
          }
        },
        "type": "object",
        "required": [
          "status",
          "last_check"
        ],
        "title": "AgentHealth"
      },
      "AgentTask": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "title": "AgentTask"
      },
      "AgentsStatusResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "health": {
            "$ref": "#/components/schemas/AgentHealth"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/AgentTask"
            },
            "type": "array",
            "title": "Tasks",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "status",
          "health"
        ],
        "title": "AgentsStatusResponse"
      },
      "AssetInventoryResponse": {
        "properties": {
          "modules": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Modules"
          },
          "gauges": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Gauges"
          },
          "counters": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Counters"
          },
          "timings": {
            "additionalProperties": {
              "additionalProperties": {
                "type": "number"
              },
              "type": "object"
            },
            "type": "object",
            "title": "Timings"
          },
          "experience_rules_total": {
            "type": "integer",
            "title": "Experience Rules Total"
          },
          "experience_candidates_total": {
            "type": "integer",
            "title": "Experience Candidates Total"
          },
          "recent_logs": {
            "type": "integer",
            "title": "Recent Logs"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "modules",
          "gauges",
          "counters",
          "timings",
          "experience_rules_total",
          "experience_candidates_total",
          "recent_logs",
          "updated_at"
        ],
        "title": "AssetInventoryResponse"
      },
      "AttentionRequest": {
        "properties": {
          "target": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target"
          },
          "mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mode",
            "default": "push"
          }
        },
        "type": "object",
        "title": "AttentionRequest"
      },
      "AttentionResponse": {
        "properties": {
          "current": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current"
          },
          "stack": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Stack"
          },
          "stack_size": {
            "type": "integer",
            "title": "Stack Size"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "current",
          "stack",
          "stack_size",
          "updated_at"
        ],
        "title": "AttentionResponse"
      },
      "ConsentRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "consent": {
            "type": "boolean",
            "title": "Consent",
            "default": true
          },
          "scopes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scopes",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "ConsentRequest"
      },
      "ConsentResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "consent_id": {
            "type": "string",
            "title": "Consent Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "granted_scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Granted Scopes"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "status",
          "consent_id",
          "user_id",
          "granted_scopes",
          "timestamp"
        ],
        "title": "ConsentResponse"
      },
      "DashboardOverview": {
        "properties": {
          "tiles": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Tiles"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "tiles",
          "updated_at"
        ],
        "title": "DashboardOverview"
      },
      "ExperienceAutoCandidateConfig": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": false
          },
          "min_count": {
            "type": "integer",
            "title": "Min Count",
            "default": 3
          },
          "include_levels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Include Levels"
          },
          "since_seconds": {
            "type": "integer",
            "title": "Since Seconds",
            "default": 900
          },
          "min_confidence": {
            "type": "number",
            "title": "Min Confidence",
            "default": 0.6
          },
          "max_candidates": {
            "type": "integer",
            "title": "Max Candidates",
            "default": 10
          },
          "min_samples": {
            "type": "integer",
            "title": "Min Samples",
            "default": 20
          }
        },
        "type": "object",
        "title": "ExperienceAutoCandidateConfig"
      },
      "ExperienceRule": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "rule category",
            "default": "general"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "sources": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sources"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "v1"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence",
            "default": 0.7
          },
          "weight": {
            "type": "number",
            "title": "Weight",
            "default": 1.0
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "active|deprecated|draft",
            "default": "active"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "fingerprint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fingerprint"
          }
        },
        "type": "object",
        "required": [
          "title",
          "content"
        ],
        "title": "ExperienceRule"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HarvestResponse": {
        "properties": {
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "candidates": {
            "items": {
              "$ref": "#/components/schemas/ExperienceRule"
            },
            "type": "array",
            "title": "Candidates"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "created",
          "candidates",
          "updated_at"
        ],
        "title": "HarvestResponse"
      },
      "ImportRequest": {
        "properties": {
          "items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ExperienceRule"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Items"
          },
          "items_compact": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Items Compact"
          },
          "upsert": {
            "type": "boolean",
            "title": "Upsert",
            "default": true
          },
          "dedup": {
            "type": "boolean",
            "title": "Dedup",
            "default": true
          }
        },
        "type": "object",
        "title": "ImportRequest"
      },
      "LogSearchRequest": {
        "properties": {
          "q": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Q"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "level": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Level"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 50
          },
          "since_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Since Seconds",
            "default": 3600
          }
        },
        "type": "object",
        "title": "LogSearchRequest"
      },
      "MemoryExportRequest": {
        "properties": {
          "format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Format",
            "default": "json"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "default": 100
          }
        },
        "type": "object",
        "title": "MemoryExportRequest"
      },
      "MemoryExportResponse": {
        "properties": {
          "export_url": {
            "type": "string",
            "title": "Export Url"
          },
          "expires_at": {
            "type": "string",
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "export_url",
          "expires_at"
        ],
        "title": "MemoryExportResponse"
      },
      "MemoryItem": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "content": {
            "type": "object",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "MemoryItem"
      },
      "MemorySyncRequest": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/MemoryItem"
            },
            "type": "array",
            "title": "Items"
          },
          "force": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Force",
            "default": false
          },
          "timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout",
            "default": 30
          }
        },
        "type": "object",
        "title": "MemorySyncRequest"
      },
      "MemorySyncResponse": {
        "properties": {
          "synced_count": {
            "type": "integer",
            "title": "Synced Count"
          },
          "failed_count": {
            "type": "integer",
            "title": "Failed Count"
          },
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "finished_at": {
            "type": "string",
            "title": "Finished At"
          }
        },
        "type": "object",
        "required": [
          "synced_count",
          "failed_count",
          "trace_id",
          "finished_at"
        ],
        "title": "MemorySyncResponse"
      },
      "MigrationPlanRequest": {
        "properties": {
          "source_version": {
            "type": "string",
            "title": "Source Version",
            "default": "v2.2"
          },
          "target_version": {
            "type": "string",
            "title": "Target Version",
            "default": "v2.3"
          },
          "dry_run": {
            "type": "boolean",
            "title": "Dry Run",
            "default": true
          },
          "scope": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scope",
            "default": []
          }
        },
        "type": "object",
        "title": "MigrationPlanRequest"
      },
      "MigrationPlanResponse": {
        "properties": {
          "steps": {
            "items": {
              "$ref": "#/components/schemas/MigrationPlanStep"
            },
            "type": "array",
            "title": "Steps"
          },
          "total_estimated_ms": {
            "type": "integer",
            "title": "Total Estimated Ms"
          },
          "risks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Risks"
          },
          "can_rollback": {
            "type": "boolean",
            "title": "Can Rollback"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "steps",
          "total_estimated_ms",
          "risks",
          "can_rollback",
          "updated_at"
        ],
        "title": "MigrationPlanResponse"
      },
      "MigrationPlanStep": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "estimated_ms": {
            "type": "integer",
            "title": "Estimated Ms"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "estimated_ms"
        ],
        "title": "MigrationPlanStep"
      },
      "PlanRequest": {
        "properties": {
          "goal": {
            "type": "string",
            "title": "Goal"
          },
          "constraints": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Constraints",
            "default": []
          },
          "max_steps": {
            "type": "integer",
            "title": "Max Steps",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "goal"
        ],
        "title": "PlanRequest"
      },
      "PlanResponse": {
        "properties": {
          "plan_id": {
            "type": "string",
            "title": "Plan Id"
          },
          "steps": {
            "items": {
              "$ref": "#/components/schemas/PlanStep"
            },
            "type": "array",
            "title": "Steps"
          }
        },
        "type": "object",
        "required": [
          "plan_id",
          "steps"
        ],
        "title": "PlanResponse"
      },
      "PlanStep": {
        "properties": {
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "action": {
            "type": "string",
            "title": "Action"
          },
          "expected_outcome": {
            "type": "string",
            "title": "Expected Outcome"
          }
        },
        "type": "object",
        "required": [
          "index",
          "action",
          "expected_outcome"
        ],
        "title": "PlanStep"
      },
      "ReflectionResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "suggestions": {
            "items": {
              "$ref": "#/components/schemas/ReflectionSuggestion"
            },
            "type": "array",
            "title": "Suggestions"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "count",
          "suggestions",
          "updated_at"
        ],
        "title": "ReflectionResponse"
      },
      "ReflectionSuggestion": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "default": "observability"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "sources": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sources"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "draft"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence",
            "default": 0.6
          },
          "weight": {
            "type": "number",
            "title": "Weight",
            "default": 1.0
          }
        },
        "type": "object",
        "required": [
          "title",
          "content"
        ],
        "title": "ReflectionSuggestion"
      },
      "SearchResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "returned": {
            "type": "integer",
            "title": "Returned"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExperienceRule"
            },
            "type": "array",
            "title": "Items"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "count",
          "returned",
          "items",
          "updated_at"
        ],
        "title": "SearchResponse"
      },
      "StateRequest": {
        "properties": {
          "state": {
            "type": "string",
            "title": "State"
          },
          "goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Goal"
          },
          "force": {
            "type": "boolean",
            "title": "Force",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "state"
        ],
        "title": "StateRequest"
      },
      "StateResponse": {
        "properties": {
          "state": {
            "type": "string",
            "title": "State"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          },
          "current_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Goal"
          },
          "goal_stack": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Goal Stack"
          },
          "allowed_next_states": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Allowed Next States"
          }
        },
        "type": "object",
        "required": [
          "state",
          "updated_at",
          "current_goal",
          "goal_stack",
          "allowed_next_states"
        ],
        "title": "StateResponse"
      },
      "StatusResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "consent_active": {
            "type": "boolean",
            "title": "Consent Active"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes"
          }
        },
        "type": "object",
        "required": [
          "status",
          "consent_active",
          "scopes"
        ],
        "title": "StatusResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}