{
  "timestamp": "2025-08-28 19:27:47",
  "overall_success": false,
  "total_duration": 9.066447496414185,
  "coverage_percentage": 0.0,
  "summary": {
    "total_tests": 16,
    "passed_tests": 0,
    "failed_tests": 0,
    "integration_tests_success": false,
    "postman_collection_success": true
  },
  "detailed_results": [
    {
      "type": "integration_tests",
      "success": false,
      "duration": 0.8279197216033936,
      "stdout": "",
      "stderr": "test_agents_status_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_agents_status_endpoint)\nTest /api/v2.3-preview/agents/status for status enum compliance. ... FAIL\ntest_cloud_status_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_cloud_status_endpoint)\nTest /api/v2.3-preview/cloud/status for cloud status compliance. ... FAIL\ntest_consciousness_attention_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_consciousness_attention_endpoint)\nTest /api/v2.3-preview/consciousness/attention for attention status compliance. ... ok\ntest_consciousness_state_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_consciousness_state_endpoint)\nTest /api/v2.3-preview/consciousness/state for consciousness status compliance. ... ok\ntest_execution_act_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_execution_act_endpoint)\nTest /api/v2.3-preview/execution/act for execution status compliance. ... ok\ntest_experience_candidates_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_experience_candidates_endpoint)\nTest /api/v2.3-preview/experience/candidates for experience status compliance. ... ok\ntest_experience_rules_post_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_experience_rules_post_endpoint)\nTest /api/v2.3-preview/experience/rules POST for experience status compliance. ... FAIL\ntest_memory_export_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_memory_export_endpoint)\nTest /api/v2.3-preview/memory/export for task status compliance. ... ok\ntest_memory_sync_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_memory_sync_endpoint)\nTest /api/v2.3-preview/memory/sync for job status compliance. ... ok\ntest_observability_logs_search_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_observability_logs_search_endpoint)\nTest /api/v2.3-preview/observability/logs/search for log status compliance. ... ok\ntest_observability_metrics_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_observability_metrics_endpoint)\nTest /api/v2.3-preview/observability/metrics for metrics status compliance. ... ok\ntest_reasoning_plan_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_reasoning_plan_endpoint)\nTest /api/v2.3-preview/reasoning/plan for task status compliance. ... ok\ntest_status_enum_coverage_report (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_status_enum_coverage_report)\nGenerate coverage report for status enum validation. ... ERROR\n\n======================================================================\nERROR: test_status_enum_coverage_report (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_status_enum_coverage_report)\nGenerate coverage report for status enum validation.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\星河超脑\\星河超脑\\V2.3\\tests\\integration\\status_validation_test.py\", line 272, in test_status_enum_coverage_report\n    print(f\"\\n\\U0001f4ca Status Enum Validation Coverage Report:\")\n    ~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeEncodeError: 'gbk' codec can't encode character '\\U0001f4ca' in position 2: illegal multibyte sequence\n\n======================================================================\nFAIL: test_agents_status_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_agents_status_endpoint)\nTest /api/v2.3-preview/agents/status for status enum compliance.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\星河超脑\\星河超脑\\V2.3\\tests\\integration\\status_validation_test.py\", line 84, in test_agents_status_endpoint\n    self.assertIn(response.status_code, [200, 204],\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                 f\"Unexpected status code: {response.status_code}\")\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAssertionError: 404 not found in [200, 204] : Unexpected status code: 404\n\n======================================================================\nFAIL: test_cloud_status_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_cloud_status_endpoint)\nTest /api/v2.3-preview/cloud/status for cloud status compliance.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\星河超脑\\星河超脑\\V2.3\\tests\\integration\\status_validation_test.py\", line 219, in test_cloud_status_endpoint\n    self.assertIn(response.status_code, [200, 204],\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                 f\"Unexpected status code: {response.status_code}\")\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAssertionError: 422 not found in [200, 204] : Unexpected status code: 422\n\n======================================================================\nFAIL: test_experience_rules_post_endpoint (tests.integration.status_validation_test.StatusValidationIntegrationTest.test_experience_rules_post_endpoint)\nTest /api/v2.3-preview/experience/rules POST for experience status compliance.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\星河超脑\\星河超脑\\V2.3\\tests\\integration\\status_validation_test.py\", line 191, in test_experience_rules_post_endpoint\n    self.assertIn(response.status_code, [200, 201],\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                 f\"Unexpected status code: {response.status_code}\")\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAssertionError: 422 not found in [200, 201] : Unexpected status code: 422\n\n----------------------------------------------------------------------\nRan 13 tests in 0.143s\n\nFAILED (failures=3, errors=1)\n",
      "returncode": 1
    },
    {
      "type": "postman_collection",
      "success": true,
      "duration": 8.238527774810791,
      "stdout": "newman\n\nV2.3 Status Enum Compliance - Enhanced Coverage\n\n→ Agents Status\n  GET http://localhost:8000/api/v2.3-preview/agents/status [404 Not Found, 268B, 23ms]\n  √  Response is JSON\n  √  Agent health status validation passed\n\n→ Memory Sync (202 + CloudSyncJob)\n  POST http://localhost:8000/api/v2.3-preview/memory/sync [200 OK, 310B, 5ms]\n  √  Accepted (202) or OK (200/201/204) for sync endpoint\n  √  CloudSyncJob status validation passed\n\n→ Memory Export\n  GET http://localhost:8000/api/v2.3-preview/memory/export [200 OK, 307B, 3ms]\n  √  Export endpoint responds successfully\n\n→ Execution Act\n  POST http://localhost:8000/api/v2.3-preview/execution/act [200 OK, 237B, 5ms]\n  √  Execution endpoint responds\n\n→ Reasoning Plan\n  POST http://localhost:8000/api/v2.3-preview/reasoning/plan [200 OK, 541B, 6ms]\n  √  Reasoning plan endpoint responds\n\n→ Consciousness Attention GET\n  GET http://localhost:8000/api/v2.3-preview/consciousness/attention [200 OK, 265B, 2ms]\n  √  Attention GET endpoint responds\n\n→ Consciousness State GET\n  GET http://localhost:8000/api/v2.3-preview/consciousness/state [200 OK, 322B, 3ms]\n  √  State GET endpoint responds\n\n→ Experience Rules POST\n  POST http://localhost:8000/api/v2.3-preview/experience/rules [200 OK, 576B, 3ms]\n  √  Experience rules POST endpoint responds\n  √  Experience rule status validation passed\n\n→ Experience Candidates GET\n  GET http://localhost:8000/api/v2.3-preview/experience/candidates [200 OK, 631B, 5ms]\n  √  Experience candidates endpoint responds\n\n→ Cloud Status\n  GET http://localhost:8000/api/v2.3-preview/cloud/status?user_id=test-user [200 OK, 227B, 3ms]\n  √  Cloud status endpoint responds\n\n→ Observability Metrics\n  GET http://localhost:8000/api/v2.3-preview/observability/metrics [200 OK, 4.35kB, 4ms]\n  √  Metrics endpoint responds\n  √  Metrics status validation completed\n\n→ Observability Logs Search\n  GET http://localhost:8000/api/v2.3-preview/observability/logs/search?q=test [200 OK, 258B, 3ms]\n  √  Logs search endpoint responds\n\n┌─────────────────────────┬─────────────────┬─────────────────┐\n│                         │        executed │          failed │\n├─────────────────────────┼─────────────────┼─────────────────┤\n│              iterations │               1 │               0 │\n├─────────────────────────┼─────────────────┼─────────────────┤\n│                requests │              12 │               0 │\n├─────────────────────────┼─────────────────┼─────────────────┤\n│            test-scripts │              12 │               0 │\n├─────────────────────────┼─────────────────┼─────────────────┤\n│      prerequest-scripts │               0 │               0 │\n├─────────────────────────┼─────────────────┼─────────────────┤\n│              assertions │              16 │               0 │\n├─────────────────────────┴─────────────────┴─────────────────┤\n│ total run duration: 7.3s                                    │\n├─────────────────────────────────────────────────────────────┤\n│ total data received: 6.17kB (approx)                        │\n├─────────────────────────────────────────────────────────────┤\n│ average response time: 5ms [min: 2ms, max: 23ms, s.d.: 5ms] │\n└─────────────────────────────────────────────────────────────┘\n",
      "stderr": "",
      "returncode": 0,
      "report_file": "C:\\星河超脑\\星河超脑\\V2.3\\reports\\status_validation\\postman_report_1756380458.json",
      "detailed_results": {
        "collection": {
          "item": [
            {
              "id": "03ab856e-2363-4463-a185-3f8980d18b66",
              "name": "Agents Status",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b1a324a5-00c2-46eb-a4c8-ab63b849cee2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Response is JSON', function () {",
                      "  pm.response.to.have.header('Content-Type');",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const DISALLOWED = new Set(['running','success','error']);",
                      "const TASK_ALLOWED = new Set(['pending','in_progress','completed','failed','canceled','timeout']);",
                      "const AGENT_HEALTH_ALLOWED = new Set(['idle','busy','error','maintenance']);",
                      "",
                      "function scan(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(scan); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        pm.expect(DISALLOWED.has(v)).to.eql(false, `status contains disallowed value: ${v}`);",
                      "        pm.expect(TASK_ALLOWED.has(v) || AGENT_HEALTH_ALLOWED.has(v)).to.eql(true, `status not in allowed set: ${v}`);",
                      "        pm.expect(v !== 'active').to.eql(true, 'status must not be \\'active\\'');",
                      "      }",
                      "      scan(v);",
                      "    });",
                      "  }",
                      "}",
                      "scan(json);",
                      "pm.test('Agent health status validation passed', function () { pm.expect(true).to.be.true; });"
                    ],
                    "_lastExecutionId": "cc9afbfe-9ad9-425d-a8df-acbef7c22ab5"
                  }
                }
              ]
            },
            {
              "id": "9469e641-5e6c-4d27-b9da-fd613bf689ef",
              "name": "Memory Sync (202 + CloudSyncJob)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "memory",
                    "sync"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [ { \"content\": { \"type\": \"note\", \"text\": \"hello\" } } ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa084b61-981b-4e2a-bbec-9336440eabff",
                    "type": "text/javascript",
                    "exec": [
                      "const status = pm.response.code;",
                      "pm.test('Accepted (202) or OK (200/201/204) for sync endpoint', function () {",
                      "  pm.expect([200,201,202,204]).to.include(status);",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const DISALLOWED = new Set(['running','success','error']);",
                      "const JOB_ALLOWED = new Set(['pending','in_progress','completed','failed','timeout','manual_required']);",
                      "",
                      "function scan(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(scan); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        pm.expect(DISALLOWED.has(v)).to.eql(false, `status contains disallowed value: ${v}`);",
                      "        pm.expect(JOB_ALLOWED.has(v)).to.eql(true, `CloudSyncJob.status not in allowed set: ${v}`);",
                      "      }",
                      "      scan(v);",
                      "    });",
                      "  }",
                      "}",
                      "scan(json);",
                      "pm.test('CloudSyncJob status validation passed', function () { pm.expect(true).to.be.true; });"
                    ],
                    "_lastExecutionId": "8d8a47aa-f913-4951-9987-a315bd5ad9d4"
                  }
                }
              ]
            },
            {
              "id": "2f2dab4f-d301-4b67-a1a0-0f1608b04908",
              "name": "Memory Export",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "memory",
                    "export"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b59392-b6cf-449a-b0ae-1d9ab1ee3f40",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Export endpoint responds successfully', function () {",
                      "  pm.expect([200,202]).to.include(pm.response.code);",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const DISALLOWED = new Set(['running','success','error']);",
                      "const JOB_ALLOWED = new Set(['pending','in_progress','completed','failed','timeout','manual_required']);",
                      "",
                      "function validateStatus(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(validateStatus); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Forbidden status detected: ${v}`);",
                      "        pm.expect(JOB_ALLOWED.has(v)).to.eql(true, `Invalid export job status: ${v}`);",
                      "      }",
                      "      validateStatus(v);",
                      "    });",
                      "  }",
                      "}",
                      "validateStatus(json);"
                    ],
                    "_lastExecutionId": "9ae1f0c1-ac48-430b-8554-6822d20820e5"
                  }
                }
              ]
            },
            {
              "id": "29fa8cb5-2332-4d05-9e44-4694709666e6",
              "name": "Execution Act",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "execution",
                    "act"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"action\": \"test_action\", \"parameters\": {}}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bbf7ce62-5849-4cfb-9724-5debe77c72c3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Execution endpoint responds', function () {",
                      "  pm.expect([200,201,202]).to.include(pm.response.code);",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const DISALLOWED = new Set(['running','success','error']);",
                      "const EXECUTION_ALLOWED = new Set(['pending','in_progress','completed','failed']);",
                      "",
                      "function validateExecutionStatus(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(validateExecutionStatus); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        pm.expect(DISALLOWED.has(v)).to.eql(false, `ExecutionResult forbidden status: ${v}`);",
                      "        pm.expect(EXECUTION_ALLOWED.has(v)).to.eql(true, `ExecutionResult invalid status: ${v}`);",
                      "        pm.expect(v !== 'active').to.eql(true, 'ExecutionResult status cannot be active');",
                      "      }",
                      "      validateExecutionStatus(v);",
                      "    });",
                      "  }",
                      "}",
                      "validateExecutionStatus(json);"
                    ],
                    "_lastExecutionId": "9d32e507-7ca4-4b9d-8d02-8e783f8ad96c"
                  }
                }
              ]
            },
            {
              "id": "db917c51-a477-442a-a882-6bb68aeaff48",
              "name": "Reasoning Plan",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "reasoning",
                    "plan"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"goal\": \"test planning\", \"context\": {}}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ec26cf73-4df1-4c79-93a6-e93f64258756",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Reasoning plan endpoint responds', function () {",
                      "  pm.expect([200,201,202]).to.include(pm.response.code);",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const DISALLOWED = new Set(['running','success','error']);",
                      "const PLAN_ALLOWED = new Set(['pending','in_progress','completed','failed']);",
                      "",
                      "function validatePlanStatus(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(validatePlanStatus); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Planning forbidden status: ${v}`);",
                      "        pm.expect(PLAN_ALLOWED.has(v)).to.eql(true, `Planning invalid status: ${v}`);",
                      "      }",
                      "      validatePlanStatus(v);",
                      "    });",
                      "  }",
                      "}",
                      "validatePlanStatus(json);"
                    ],
                    "_lastExecutionId": "ac3061bd-b234-43a9-86de-635496d292b8"
                  }
                }
              ]
            },
            {
              "id": "0d87c6a2-9ace-49a1-8825-e946aac1484b",
              "name": "Consciousness Attention GET",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "consciousness",
                    "attention"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3788c2a6-088a-4441-9477-165096ece82a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Attention GET endpoint responds', function () {",
                      "  pm.expect([200]).to.include(pm.response.code);",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const DISALLOWED = new Set(['running','success','error']);",
                      "const ATTENTION_ALLOWED = new Set(['idle','busy','focused','distracted']);",
                      "",
                      "function validateAttentionStatus(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(validateAttentionStatus); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Attention forbidden status: ${v}`);",
                      "        pm.expect(v !== 'active').to.eql(true, 'Attention status cannot be active');",
                      "      }",
                      "      validateAttentionStatus(v);",
                      "    });",
                      "  }",
                      "}",
                      "validateAttentionStatus(json);"
                    ],
                    "_lastExecutionId": "f91275b3-7d8f-43c9-8fca-8275b47d2c65"
                  }
                }
              ]
            },
            {
              "id": "24f5f65a-bd32-49bc-b88d-1681d3ef80de",
              "name": "Consciousness State GET",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "consciousness",
                    "state"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "79610019-2928-44ac-b939-1e40311f6df9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('State GET endpoint responds', function () {",
                      "  pm.expect([200]).to.include(pm.response.code);",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const DISALLOWED = new Set(['running','success','error']);",
                      "",
                      "function validateConsciousnessState(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(validateConsciousnessState); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Consciousness forbidden status: ${v}`);",
                      "        pm.expect(v !== 'active').to.eql(true, 'Consciousness status cannot be active');",
                      "      }",
                      "      validateConsciousnessState(v);",
                      "    });",
                      "  }",
                      "}",
                      "validateConsciousnessState(json);"
                    ],
                    "_lastExecutionId": "4ae0271f-cb6a-42ea-ab91-f66b8b416865"
                  }
                }
              ]
            },
            {
              "id": "65f2de2d-52b0-4504-84b7-07927557d8b8",
              "name": "Experience Rules POST",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "experience",
                    "rules"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"title\": \"test rule\", \"content\": \"test rule content\", \"category\": \"test\", \"tags\": [\"test\"], \"sources\": [\"integration_test\"]}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b0877450-953e-4ffd-903c-5aa13deddb9c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Experience rules POST endpoint responds', function () {",
                      "  pm.expect([200,201]).to.include(pm.response.code);",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const EXPERIENCE_ALLOWED = new Set(['active','deprecated','draft']);",
                      "",
                      "function validateExperienceStatus(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(validateExperienceStatus); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        // Experience rules can use 'active' (enable/disable semantics)",
                      "        pm.expect(EXPERIENCE_ALLOWED.has(v)).to.eql(true, `ExperienceRule invalid status: ${v}`);",
                      "      }",
                      "      validateExperienceStatus(v);",
                      "    });",
                      "  }",
                      "}",
                      "validateExperienceStatus(json);",
                      "pm.test('Experience rule status validation passed', function () { pm.expect(true).to.be.true; });"
                    ],
                    "_lastExecutionId": "40e0c946-b691-45dc-8b2f-bef04582c94f"
                  }
                }
              ]
            },
            {
              "id": "98981e6d-2bb7-4141-958c-490d57e62628",
              "name": "Experience Candidates GET",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "experience",
                    "candidates"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "85b1a9d0-9b15-41c3-b211-3dcfe92d7e4e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Experience candidates endpoint responds', function () {",
                      "  pm.expect([200]).to.include(pm.response.code);",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const EXPERIENCE_ALLOWED = new Set(['active','deprecated','draft']);",
                      "",
                      "function validateCandidateStatus(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(validateCandidateStatus); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        pm.expect(EXPERIENCE_ALLOWED.has(v)).to.eql(true, `Candidate invalid status: ${v}`);",
                      "      }",
                      "      validateCandidateStatus(v);",
                      "    });",
                      "  }",
                      "}",
                      "validateCandidateStatus(json);"
                    ],
                    "_lastExecutionId": "f96ddbb9-bd29-4df0-bfb7-5e1e6f810edf"
                  }
                }
              ]
            },
            {
              "id": "9e9aebca-50c8-4a12-a7aa-e2f75c9dba49",
              "name": "Cloud Status",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "cloud",
                    "status"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_id",
                      "value": "test-user"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2f531fca-66af-4833-80f7-d711dfba4506",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Cloud status endpoint responds', function () {",
                      "  pm.expect([200]).to.include(pm.response.code);",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const DISALLOWED = new Set(['running','success','error']);",
                      "const CLOUD_STATUS_ALLOWED = new Set(['connected','disconnected','syncing','error']);",
                      "",
                      "function validateCloudStatus(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(validateCloudStatus); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Cloud forbidden status: ${v}`);",
                      "        pm.expect(v !== 'active').to.eql(true, 'Cloud status cannot be active');",
                      "      }",
                      "      validateCloudStatus(v);",
                      "    });",
                      "  }",
                      "}",
                      "validateCloudStatus(json);"
                    ],
                    "_lastExecutionId": "487aed9c-7239-4197-b1f6-ca15eb04da04"
                  }
                }
              ]
            },
            {
              "id": "9377feeb-0d94-4e31-8e49-0004fb89ecb7",
              "name": "Observability Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "observability",
                    "metrics"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11efdd57-559f-46b9-b9cc-a016daeddb00",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Metrics endpoint responds', function () {",
                      "  pm.expect([200]).to.include(pm.response.code);",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const DISALLOWED = new Set(['running','success','error']);",
                      "",
                      "function validateMetricsStatus(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(validateMetricsStatus); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Metrics forbidden status: ${v}`);",
                      "        pm.expect(v !== 'active').to.eql(true, 'Metrics status cannot be active');",
                      "      }",
                      "      validateMetricsStatus(v);",
                      "    });",
                      "  }",
                      "}",
                      "validateMetricsStatus(json);",
                      "pm.test('Metrics status validation completed', function () { pm.expect(true).to.be.true; });"
                    ],
                    "_lastExecutionId": "147f3be0-1dda-45a0-8e32-ba85a03c3b9c"
                  }
                }
              ]
            },
            {
              "id": "08daab52-5ac3-4592-ac0e-66d6a477cbf2",
              "name": "Observability Logs Search",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v2.3-preview",
                    "observability",
                    "logs",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "q",
                      "value": "test"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2a9b1266-1b7b-4d6b-b1a8-0c4848d67eeb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Logs search endpoint responds', function () {",
                      "  pm.expect([200]).to.include(pm.response.code);",
                      "});",
                      "",
                      "let json = {};",
                      "try { json = pm.response.json(); } catch (e) { json = {}; }",
                      "",
                      "const DISALLOWED = new Set(['running','success','error']);",
                      "",
                      "function validateLogsStatus(obj) {",
                      "  if (obj === null || obj === undefined) return;",
                      "  if (Array.isArray(obj)) { obj.forEach(validateLogsStatus); return; }",
                      "  if (typeof obj === 'object') {",
                      "    Object.keys(obj).forEach(k => {",
                      "      const v = obj[k];",
                      "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                      "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Logs forbidden status: ${v}`);",
                      "        pm.expect(v !== 'active').to.eql(true, 'Logs status cannot be active');",
                      "      }",
                      "      validateLogsStatus(v);",
                      "    });",
                      "  }",
                      "}",
                      "validateLogsStatus(json);"
                    ],
                    "_lastExecutionId": "cd5bf3d0-4b1f-4e69-aa9c-525d8c0cc289"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "1590757d-db4c-4015-b7f3-5fb3fdfcc262",
            "name": "V2.3 Status Enum Compliance - Enhanced Coverage",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Comprehensive assertions to enforce status enums across all APIs (95% coverage target)",
              "type": "text/plain"
            }
          }
        },
        "environment": {
          "_": {
            "postman_variable_scope": "environment",
            "postman_exported_at": "2025-08-28T08:00:00.000Z",
            "postman_exported_using": "Postman/10.x"
          },
          "id": "8f7b3a74-5c2f-4e15-9db0-1e5f2243e001",
          "name": "V2.3 Local",
          "values": [
            {
              "type": "any",
              "value": "http://localhost:8000",
              "key": "baseUrl"
            },
            {
              "type": "any",
              "value": "http://localhost:8000",
              "key": "BASE_URL"
            },
            {
              "type": "any",
              "value": "http://localhost:8000",
              "key": "baseurl"
            }
          ]
        },
        "globals": {
          "id": "b194292e-3050-4e13-ac49-92db1b1ef11b",
          "values": []
        },
        "run": {
          "stats": {
            "iterations": {
              "total": 1,
              "pending": 0,
              "failed": 0
            },
            "items": {
              "total": 12,
              "pending": 0,
              "failed": 0
            },
            "scripts": {
              "total": 12,
              "pending": 0,
              "failed": 0
            },
            "prerequests": {
              "total": 12,
              "pending": 0,
              "failed": 0
            },
            "requests": {
              "total": 12,
              "pending": 0,
              "failed": 0
            },
            "tests": {
              "total": 12,
              "pending": 0,
              "failed": 0
            },
            "assertions": {
              "total": 16,
              "pending": 0,
              "failed": 0
            },
            "testScripts": {
              "total": 12,
              "pending": 0,
              "failed": 0
            },
            "prerequestScripts": {
              "total": 0,
              "pending": 0,
              "failed": 0
            }
          },
          "timings": {
            "responseAverage": 5.416666666666667,
            "responseMin": 2,
            "responseMax": 23,
            "responseSd": 5.423073134507985,
            "dnsAverage": 0,
            "dnsMin": 0,
            "dnsMax": 0,
            "dnsSd": 0,
            "firstByteAverage": 0,
            "firstByteMin": 0,
            "firstByteMax": 0,
            "firstByteSd": 0,
            "started": 1756380459655,
            "completed": 1756380467033
          },
          "executions": [
            {
              "cursor": {
                "position": 0,
                "iteration": 0,
                "length": 12,
                "cycles": 1,
                "empty": false,
                "eof": false,
                "bof": true,
                "cr": false,
                "ref": "fc06fcb2-f4a1-450c-81b9-2bc3a1aa4ebd",
                "httpRequestId": "db5da055-1c0b-4762-81be-e6004d9f29ab"
              },
              "item": {
                "id": "03ab856e-2363-4463-a185-3f8980d18b66",
                "name": "Agents Status",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "agents",
                      "status"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1a324a5-00c2-46eb-a4c8-ab63b849cee2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Response is JSON', function () {",
                        "  pm.response.to.have.header('Content-Type');",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const DISALLOWED = new Set(['running','success','error']);",
                        "const TASK_ALLOWED = new Set(['pending','in_progress','completed','failed','canceled','timeout']);",
                        "const AGENT_HEALTH_ALLOWED = new Set(['idle','busy','error','maintenance']);",
                        "",
                        "function scan(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(scan); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        pm.expect(DISALLOWED.has(v)).to.eql(false, `status contains disallowed value: ${v}`);",
                        "        pm.expect(TASK_ALLOWED.has(v) || AGENT_HEALTH_ALLOWED.has(v)).to.eql(true, `status not in allowed set: ${v}`);",
                        "        pm.expect(v !== 'active').to.eql(true, 'status must not be \\'active\\'');",
                        "      }",
                        "      scan(v);",
                        "    });",
                        "  }",
                        "}",
                        "scan(json);",
                        "pm.test('Agent health status validation passed', function () { pm.expect(true).to.be.true; });"
                      ],
                      "_lastExecutionId": "cc9afbfe-9ad9-425d-a8df-acbef7c22ab5"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "agents",
                    "status"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "4604e2f5-4c66-4e7c-a9db-c0290077e9f1",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  }
                ],
                "method": "GET"
              },
              "response": {
                "id": "9076aa16-6d8a-418c-936b-dcffa2477259",
                "status": "Not Found",
                "code": 404,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:40 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "db33828f-82e2-4ce7-bfef-1f5bf1e4919c"
                  },
                  {
                    "key": "content-length",
                    "value": "86"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    99,
                    111,
                    100,
                    101,
                    34,
                    58,
                    52,
                    48,
                    52,
                    48,
                    49,
                    44,
                    34,
                    109,
                    101,
                    115,
                    115,
                    97,
                    103,
                    101,
                    34,
                    58,
                    34,
                    78,
                    111,
                    116,
                    32,
                    70,
                    111,
                    117,
                    110,
                    100,
                    34,
                    44,
                    34,
                    116,
                    114,
                    97,
                    99,
                    101,
                    95,
                    105,
                    100,
                    34,
                    58,
                    34,
                    100,
                    98,
                    51,
                    51,
                    56,
                    50,
                    56,
                    102,
                    45,
                    56,
                    50,
                    101,
                    50,
                    45,
                    52,
                    99,
                    101,
                    55,
                    45,
                    98,
                    102,
                    101,
                    102,
                    45,
                    49,
                    102,
                    53,
                    98,
                    102,
                    49,
                    101,
                    52,
                    57,
                    49,
                    57,
                    99,
                    34,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 23,
                "responseSize": 86
              },
              "id": "03ab856e-2363-4463-a185-3f8980d18b66",
              "assertions": [
                {
                  "assertion": "Response is JSON",
                  "skipped": false
                },
                {
                  "assertion": "Agent health status validation passed",
                  "skipped": false
                }
              ]
            },
            {
              "cursor": {
                "ref": "4b58fde1-aee4-4803-a020-4748f0dbde7c",
                "length": 12,
                "cycles": 1,
                "position": 1,
                "iteration": 0,
                "httpRequestId": "e68f0ad9-c9da-4d5f-bde3-c74722990cb4"
              },
              "item": {
                "id": "9469e641-5e6c-4d27-b9da-fd613bf689ef",
                "name": "Memory Sync (202 + CloudSyncJob)",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "memory",
                      "sync"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"items\": [ { \"content\": { \"type\": \"note\", \"text\": \"hello\" } } ]\n}"
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa084b61-981b-4e2a-bbec-9336440eabff",
                      "type": "text/javascript",
                      "exec": [
                        "const status = pm.response.code;",
                        "pm.test('Accepted (202) or OK (200/201/204) for sync endpoint', function () {",
                        "  pm.expect([200,201,202,204]).to.include(status);",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const DISALLOWED = new Set(['running','success','error']);",
                        "const JOB_ALLOWED = new Set(['pending','in_progress','completed','failed','timeout','manual_required']);",
                        "",
                        "function scan(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(scan); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        pm.expect(DISALLOWED.has(v)).to.eql(false, `status contains disallowed value: ${v}`);",
                        "        pm.expect(JOB_ALLOWED.has(v)).to.eql(true, `CloudSyncJob.status not in allowed set: ${v}`);",
                        "      }",
                        "      scan(v);",
                        "    });",
                        "  }",
                        "}",
                        "scan(json);",
                        "pm.test('CloudSyncJob status validation passed', function () { pm.expect(true).to.be.true; });"
                      ],
                      "_lastExecutionId": "8d8a47aa-f913-4951-9987-a315bd5ad9d4"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "memory",
                    "sync"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "0ab5c756-a186-438f-8213-2ae03abbe666",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  },
                  {
                    "key": "Content-Length",
                    "value": "69",
                    "system": true
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [ { \"content\": { \"type\": \"note\", \"text\": \"hello\" } } ]\n}"
                }
              },
              "response": {
                "id": "4fbb2656-a948-4c45-a732-6f566f2ab3af",
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:40 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "content-length",
                    "value": "134"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "9e41739a-38da-487b-93aa-37ac8a70da0d"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    115,
                    121,
                    110,
                    99,
                    101,
                    100,
                    95,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    49,
                    44,
                    34,
                    102,
                    97,
                    105,
                    108,
                    101,
                    100,
                    95,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    48,
                    44,
                    34,
                    116,
                    114,
                    97,
                    99,
                    101,
                    95,
                    105,
                    100,
                    34,
                    58,
                    34,
                    50,
                    98,
                    51,
                    97,
                    97,
                    55,
                    48,
                    52,
                    45,
                    102,
                    49,
                    55,
                    49,
                    45,
                    52,
                    52,
                    49,
                    48,
                    45,
                    98,
                    100,
                    48,
                    52,
                    45,
                    97,
                    57,
                    50,
                    51,
                    54,
                    49,
                    97,
                    97,
                    101,
                    50,
                    55,
                    55,
                    34,
                    44,
                    34,
                    102,
                    105,
                    110,
                    105,
                    115,
                    104,
                    101,
                    100,
                    95,
                    97,
                    116,
                    34,
                    58,
                    34,
                    50,
                    48,
                    50,
                    53,
                    45,
                    48,
                    56,
                    45,
                    50,
                    56,
                    84,
                    49,
                    49,
                    58,
                    50,
                    55,
                    58,
                    52,
                    48,
                    46,
                    56,
                    54,
                    52,
                    57,
                    52,
                    55,
                    43,
                    48,
                    48,
                    58,
                    48,
                    48,
                    34,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 5,
                "responseSize": 134
              },
              "id": "9469e641-5e6c-4d27-b9da-fd613bf689ef",
              "assertions": [
                {
                  "assertion": "Accepted (202) or OK (200/201/204) for sync endpoint",
                  "skipped": false
                },
                {
                  "assertion": "CloudSyncJob status validation passed",
                  "skipped": false
                }
              ]
            },
            {
              "cursor": {
                "ref": "977558cc-2f52-43aa-b378-551520706426",
                "length": 12,
                "cycles": 1,
                "position": 2,
                "iteration": 0,
                "httpRequestId": "beb68a2d-c1bf-4e4a-9ca9-db69b7333b1a"
              },
              "item": {
                "id": "2f2dab4f-d301-4b67-a1a0-0f1608b04908",
                "name": "Memory Export",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "memory",
                      "export"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44b59392-b6cf-449a-b0ae-1d9ab1ee3f40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Export endpoint responds successfully', function () {",
                        "  pm.expect([200,202]).to.include(pm.response.code);",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const DISALLOWED = new Set(['running','success','error']);",
                        "const JOB_ALLOWED = new Set(['pending','in_progress','completed','failed','timeout','manual_required']);",
                        "",
                        "function validateStatus(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(validateStatus); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Forbidden status detected: ${v}`);",
                        "        pm.expect(JOB_ALLOWED.has(v)).to.eql(true, `Invalid export job status: ${v}`);",
                        "      }",
                        "      validateStatus(v);",
                        "    });",
                        "  }",
                        "}",
                        "validateStatus(json);"
                      ],
                      "_lastExecutionId": "9ae1f0c1-ac48-430b-8554-6822d20820e5"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "memory",
                    "export"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "8ab34916-b7e3-48f7-8cdb-b7d07dc7baa0",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  }
                ],
                "method": "GET"
              },
              "response": {
                "id": "e8cc835a-bf86-4b59-b872-da533d0a6f85",
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:41 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "content-length",
                    "value": "131"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "92630a4b-5c92-43af-884b-859d3f2a06ed"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    101,
                    120,
                    112,
                    111,
                    114,
                    116,
                    95,
                    117,
                    114,
                    108,
                    34,
                    58,
                    34,
                    47,
                    100,
                    111,
                    119,
                    110,
                    108,
                    111,
                    97,
                    100,
                    115,
                    47,
                    109,
                    101,
                    109,
                    111,
                    114,
                    121,
                    47,
                    101,
                    120,
                    112,
                    111,
                    114,
                    116,
                    45,
                    48,
                    100,
                    50,
                    98,
                    51,
                    56,
                    52,
                    54,
                    45,
                    102,
                    54,
                    53,
                    57,
                    45,
                    52,
                    48,
                    54,
                    98,
                    45,
                    56,
                    55,
                    56,
                    49,
                    45,
                    55,
                    50,
                    54,
                    98,
                    102,
                    97,
                    50,
                    101,
                    50,
                    53,
                    100,
                    57,
                    46,
                    106,
                    115,
                    111,
                    110,
                    34,
                    44,
                    34,
                    101,
                    120,
                    112,
                    105,
                    114,
                    101,
                    115,
                    95,
                    97,
                    116,
                    34,
                    58,
                    34,
                    50,
                    48,
                    50,
                    53,
                    45,
                    48,
                    56,
                    45,
                    50,
                    56,
                    84,
                    49,
                    50,
                    58,
                    50,
                    55,
                    58,
                    52,
                    49,
                    46,
                    52,
                    56,
                    49,
                    48,
                    56,
                    57,
                    43,
                    48,
                    48,
                    58,
                    48,
                    48,
                    34,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 3,
                "responseSize": 131
              },
              "id": "2f2dab4f-d301-4b67-a1a0-0f1608b04908",
              "assertions": [
                {
                  "assertion": "Export endpoint responds successfully",
                  "skipped": false
                }
              ]
            },
            {
              "cursor": {
                "ref": "87ae8f8c-56ff-45f3-bdad-3236bc56bd30",
                "length": 12,
                "cycles": 1,
                "position": 3,
                "iteration": 0,
                "httpRequestId": "e6747b10-30dd-4001-a2c0-ab06802afc53"
              },
              "item": {
                "id": "29fa8cb5-2332-4d05-9e44-4694709666e6",
                "name": "Execution Act",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "execution",
                      "act"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\"action\": \"test_action\", \"parameters\": {}}"
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbf7ce62-5849-4cfb-9724-5debe77c72c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Execution endpoint responds', function () {",
                        "  pm.expect([200,201,202]).to.include(pm.response.code);",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const DISALLOWED = new Set(['running','success','error']);",
                        "const EXECUTION_ALLOWED = new Set(['pending','in_progress','completed','failed']);",
                        "",
                        "function validateExecutionStatus(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(validateExecutionStatus); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        pm.expect(DISALLOWED.has(v)).to.eql(false, `ExecutionResult forbidden status: ${v}`);",
                        "        pm.expect(EXECUTION_ALLOWED.has(v)).to.eql(true, `ExecutionResult invalid status: ${v}`);",
                        "        pm.expect(v !== 'active').to.eql(true, 'ExecutionResult status cannot be active');",
                        "      }",
                        "      validateExecutionStatus(v);",
                        "    });",
                        "  }",
                        "}",
                        "validateExecutionStatus(json);"
                      ],
                      "_lastExecutionId": "9d32e507-7ca4-4b9d-8d02-8e783f8ad96c"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "execution",
                    "act"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "a057fc00-51c3-40fe-9295-aacdc7a16e8b",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  },
                  {
                    "key": "Content-Length",
                    "value": "43",
                    "system": true
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"action\": \"test_action\", \"parameters\": {}}"
                }
              },
              "response": {
                "id": "a4eaa808-a68e-4359-a073-0471577b73b3",
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:41 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "content-length",
                    "value": "62"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "6c6a8b1d-42aa-46df-917c-d393fba78df2"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    115,
                    117,
                    99,
                    99,
                    101,
                    115,
                    115,
                    34,
                    58,
                    116,
                    114,
                    117,
                    101,
                    44,
                    34,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    34,
                    58,
                    123,
                    34,
                    97,
                    99,
                    116,
                    105,
                    111,
                    110,
                    34,
                    58,
                    34,
                    116,
                    101,
                    115,
                    116,
                    95,
                    97,
                    99,
                    116,
                    105,
                    111,
                    110,
                    34,
                    44,
                    34,
                    112,
                    97,
                    114,
                    97,
                    109,
                    115,
                    34,
                    58,
                    123,
                    125,
                    125,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 5,
                "responseSize": 62
              },
              "id": "29fa8cb5-2332-4d05-9e44-4694709666e6",
              "assertions": [
                {
                  "assertion": "Execution endpoint responds",
                  "skipped": false
                }
              ]
            },
            {
              "cursor": {
                "ref": "e52d5bfc-82c6-4647-bd2e-1c1eca20ee5e",
                "length": 12,
                "cycles": 1,
                "position": 4,
                "iteration": 0,
                "httpRequestId": "12554946-6f50-4cdc-b448-19562b9dd1b9"
              },
              "item": {
                "id": "db917c51-a477-442a-a882-6bb68aeaff48",
                "name": "Reasoning Plan",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "reasoning",
                      "plan"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\"goal\": \"test planning\", \"context\": {}}"
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec26cf73-4df1-4c79-93a6-e93f64258756",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Reasoning plan endpoint responds', function () {",
                        "  pm.expect([200,201,202]).to.include(pm.response.code);",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const DISALLOWED = new Set(['running','success','error']);",
                        "const PLAN_ALLOWED = new Set(['pending','in_progress','completed','failed']);",
                        "",
                        "function validatePlanStatus(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(validatePlanStatus); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Planning forbidden status: ${v}`);",
                        "        pm.expect(PLAN_ALLOWED.has(v)).to.eql(true, `Planning invalid status: ${v}`);",
                        "      }",
                        "      validatePlanStatus(v);",
                        "    });",
                        "  }",
                        "}",
                        "validatePlanStatus(json);"
                      ],
                      "_lastExecutionId": "ac3061bd-b234-43a9-86de-635496d292b8"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "reasoning",
                    "plan"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "a3d3f9eb-4af6-4106-877b-2914a2fd78bb",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  },
                  {
                    "key": "Content-Length",
                    "value": "40",
                    "system": true
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"goal\": \"test planning\", \"context\": {}}"
                }
              },
              "response": {
                "id": "8302c1c1-381e-4f89-96d9-703cd2720280",
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:42 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "content-length",
                    "value": "365"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "3ede04f2-4a9a-4de1-af06-de97ccd7d703"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    112,
                    108,
                    97,
                    110,
                    95,
                    105,
                    100,
                    34,
                    58,
                    34,
                    48,
                    98,
                    49,
                    52,
                    99,
                    98,
                    100,
                    49,
                    45,
                    56,
                    101,
                    49,
                    48,
                    45,
                    52,
                    102,
                    102,
                    101,
                    45,
                    56,
                    54,
                    50,
                    98,
                    45,
                    49,
                    48,
                    50,
                    102,
                    49,
                    100,
                    55,
                    49,
                    54,
                    51,
                    55,
                    56,
                    34,
                    44,
                    34,
                    115,
                    116,
                    101,
                    112,
                    115,
                    34,
                    58,
                    91,
                    123,
                    34,
                    105,
                    110,
                    100,
                    101,
                    120,
                    34,
                    58,
                    49,
                    44,
                    34,
                    97,
                    99,
                    116,
                    105,
                    111,
                    110,
                    34,
                    58,
                    34,
                    115,
                    116,
                    101,
                    112,
                    45,
                    49,
                    34,
                    44,
                    34,
                    101,
                    120,
                    112,
                    101,
                    99,
                    116,
                    101,
                    100,
                    95,
                    111,
                    117,
                    116,
                    99,
                    111,
                    109,
                    101,
                    34,
                    58,
                    34,
                    111,
                    117,
                    116,
                    99,
                    111,
                    109,
                    101,
                    45,
                    49,
                    34,
                    125,
                    44,
                    123,
                    34,
                    105,
                    110,
                    100,
                    101,
                    120,
                    34,
                    58,
                    50,
                    44,
                    34,
                    97,
                    99,
                    116,
                    105,
                    111,
                    110,
                    34,
                    58,
                    34,
                    115,
                    116,
                    101,
                    112,
                    45,
                    50,
                    34,
                    44,
                    34,
                    101,
                    120,
                    112,
                    101,
                    99,
                    116,
                    101,
                    100,
                    95,
                    111,
                    117,
                    116,
                    99,
                    111,
                    109,
                    101,
                    34,
                    58,
                    34,
                    111,
                    117,
                    116,
                    99,
                    111,
                    109,
                    101,
                    45,
                    50,
                    34,
                    125,
                    44,
                    123,
                    34,
                    105,
                    110,
                    100,
                    101,
                    120,
                    34,
                    58,
                    51,
                    44,
                    34,
                    97,
                    99,
                    116,
                    105,
                    111,
                    110,
                    34,
                    58,
                    34,
                    115,
                    116,
                    101,
                    112,
                    45,
                    51,
                    34,
                    44,
                    34,
                    101,
                    120,
                    112,
                    101,
                    99,
                    116,
                    101,
                    100,
                    95,
                    111,
                    117,
                    116,
                    99,
                    111,
                    109,
                    101,
                    34,
                    58,
                    34,
                    111,
                    117,
                    116,
                    99,
                    111,
                    109,
                    101,
                    45,
                    51,
                    34,
                    125,
                    44,
                    123,
                    34,
                    105,
                    110,
                    100,
                    101,
                    120,
                    34,
                    58,
                    52,
                    44,
                    34,
                    97,
                    99,
                    116,
                    105,
                    111,
                    110,
                    34,
                    58,
                    34,
                    115,
                    116,
                    101,
                    112,
                    45,
                    52,
                    34,
                    44,
                    34,
                    101,
                    120,
                    112,
                    101,
                    99,
                    116,
                    101,
                    100,
                    95,
                    111,
                    117,
                    116,
                    99,
                    111,
                    109,
                    101,
                    34,
                    58,
                    34,
                    111,
                    117,
                    116,
                    99,
                    111,
                    109,
                    101,
                    45,
                    52,
                    34,
                    125,
                    44,
                    123,
                    34,
                    105,
                    110,
                    100,
                    101,
                    120,
                    34,
                    58,
                    53,
                    44,
                    34,
                    97,
                    99,
                    116,
                    105,
                    111,
                    110,
                    34,
                    58,
                    34,
                    115,
                    116,
                    101,
                    112,
                    45,
                    53,
                    34,
                    44,
                    34,
                    101,
                    120,
                    112,
                    101,
                    99,
                    116,
                    101,
                    100,
                    95,
                    111,
                    117,
                    116,
                    99,
                    111,
                    109,
                    101,
                    34,
                    58,
                    34,
                    111,
                    117,
                    116,
                    99,
                    111,
                    109,
                    101,
                    45,
                    53,
                    34,
                    125,
                    93,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 6,
                "responseSize": 365
              },
              "id": "db917c51-a477-442a-a882-6bb68aeaff48",
              "assertions": [
                {
                  "assertion": "Reasoning plan endpoint responds",
                  "skipped": false
                }
              ]
            },
            {
              "cursor": {
                "ref": "4c7224e3-c292-4566-b548-d1c838fe7a43",
                "length": 12,
                "cycles": 1,
                "position": 5,
                "iteration": 0,
                "httpRequestId": "9e10c1bd-1ba8-4972-aa0d-031fb9b4e6fd"
              },
              "item": {
                "id": "0d87c6a2-9ace-49a1-8825-e946aac1484b",
                "name": "Consciousness Attention GET",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "consciousness",
                      "attention"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3788c2a6-088a-4441-9477-165096ece82a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Attention GET endpoint responds', function () {",
                        "  pm.expect([200]).to.include(pm.response.code);",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const DISALLOWED = new Set(['running','success','error']);",
                        "const ATTENTION_ALLOWED = new Set(['idle','busy','focused','distracted']);",
                        "",
                        "function validateAttentionStatus(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(validateAttentionStatus); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Attention forbidden status: ${v}`);",
                        "        pm.expect(v !== 'active').to.eql(true, 'Attention status cannot be active');",
                        "      }",
                        "      validateAttentionStatus(v);",
                        "    });",
                        "  }",
                        "}",
                        "validateAttentionStatus(json);"
                      ],
                      "_lastExecutionId": "f91275b3-7d8f-43c9-8fca-8275b47d2c65"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "consciousness",
                    "attention"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "77fe1021-9037-4891-bf0c-d0a6bdca1233",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  }
                ],
                "method": "GET"
              },
              "response": {
                "id": "ce87eaf5-6a3e-4d68-99b5-bdc84c32fe7a",
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:42 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "content-length",
                    "value": "90"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "abb5f9c2-43eb-4e3a-9d0d-b349a15da15b"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    99,
                    117,
                    114,
                    114,
                    101,
                    110,
                    116,
                    34,
                    58,
                    110,
                    117,
                    108,
                    108,
                    44,
                    34,
                    115,
                    116,
                    97,
                    99,
                    107,
                    34,
                    58,
                    91,
                    93,
                    44,
                    34,
                    115,
                    116,
                    97,
                    99,
                    107,
                    95,
                    115,
                    105,
                    122,
                    101,
                    34,
                    58,
                    48,
                    44,
                    34,
                    117,
                    112,
                    100,
                    97,
                    116,
                    101,
                    100,
                    95,
                    97,
                    116,
                    34,
                    58,
                    34,
                    50,
                    48,
                    50,
                    53,
                    45,
                    48,
                    56,
                    45,
                    50,
                    56,
                    84,
                    49,
                    49,
                    58,
                    50,
                    54,
                    58,
                    51,
                    51,
                    46,
                    52,
                    55,
                    56,
                    48,
                    52,
                    51,
                    43,
                    48,
                    48,
                    58,
                    48,
                    48,
                    34,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 2,
                "responseSize": 90
              },
              "id": "0d87c6a2-9ace-49a1-8825-e946aac1484b",
              "assertions": [
                {
                  "assertion": "Attention GET endpoint responds",
                  "skipped": false
                }
              ]
            },
            {
              "cursor": {
                "ref": "8c6847d5-89ad-40b9-8795-2f6b84b1cfc7",
                "length": 12,
                "cycles": 1,
                "position": 6,
                "iteration": 0,
                "httpRequestId": "10165323-46c0-4ce6-bea6-7ba310648fcb"
              },
              "item": {
                "id": "24f5f65a-bd32-49bc-b88d-1681d3ef80de",
                "name": "Consciousness State GET",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "consciousness",
                      "state"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79610019-2928-44ac-b939-1e40311f6df9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('State GET endpoint responds', function () {",
                        "  pm.expect([200]).to.include(pm.response.code);",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const DISALLOWED = new Set(['running','success','error']);",
                        "",
                        "function validateConsciousnessState(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(validateConsciousnessState); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Consciousness forbidden status: ${v}`);",
                        "        pm.expect(v !== 'active').to.eql(true, 'Consciousness status cannot be active');",
                        "      }",
                        "      validateConsciousnessState(v);",
                        "    });",
                        "  }",
                        "}",
                        "validateConsciousnessState(json);"
                      ],
                      "_lastExecutionId": "4ae0271f-cb6a-42ea-ab91-f66b8b416865"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "consciousness",
                    "state"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "6023a2bf-e106-4648-a1a0-977fb51ef088",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  }
                ],
                "method": "GET"
              },
              "response": {
                "id": "5af0a47c-e7bf-4b8f-ac59-31352434e252",
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:43 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "content-length",
                    "value": "146"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "b4f7405c-02c9-43db-a7da-47e8f51eb2f5"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    115,
                    116,
                    97,
                    116,
                    101,
                    34,
                    58,
                    34,
                    105,
                    100,
                    108,
                    101,
                    34,
                    44,
                    34,
                    117,
                    112,
                    100,
                    97,
                    116,
                    101,
                    100,
                    95,
                    97,
                    116,
                    34,
                    58,
                    34,
                    50,
                    48,
                    50,
                    53,
                    45,
                    48,
                    56,
                    45,
                    50,
                    56,
                    84,
                    49,
                    49,
                    58,
                    50,
                    54,
                    58,
                    51,
                    51,
                    46,
                    52,
                    55,
                    56,
                    48,
                    52,
                    51,
                    43,
                    48,
                    48,
                    58,
                    48,
                    48,
                    34,
                    44,
                    34,
                    99,
                    117,
                    114,
                    114,
                    101,
                    110,
                    116,
                    95,
                    103,
                    111,
                    97,
                    108,
                    34,
                    58,
                    110,
                    117,
                    108,
                    108,
                    44,
                    34,
                    103,
                    111,
                    97,
                    108,
                    95,
                    115,
                    116,
                    97,
                    99,
                    107,
                    34,
                    58,
                    91,
                    93,
                    44,
                    34,
                    97,
                    108,
                    108,
                    111,
                    119,
                    101,
                    100,
                    95,
                    110,
                    101,
                    120,
                    116,
                    95,
                    115,
                    116,
                    97,
                    116,
                    101,
                    115,
                    34,
                    58,
                    91,
                    34,
                    102,
                    111,
                    99,
                    117,
                    115,
                    105,
                    110,
                    103,
                    34,
                    44,
                    34,
                    115,
                    108,
                    101,
                    101,
                    112,
                    105,
                    110,
                    103,
                    34,
                    93,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 3,
                "responseSize": 146
              },
              "id": "24f5f65a-bd32-49bc-b88d-1681d3ef80de",
              "assertions": [
                {
                  "assertion": "State GET endpoint responds",
                  "skipped": false
                }
              ]
            },
            {
              "cursor": {
                "ref": "6e96565b-30ef-40ec-a040-20496c8518ed",
                "length": 12,
                "cycles": 1,
                "position": 7,
                "iteration": 0,
                "httpRequestId": "c0e9a71a-2a82-4190-9d7d-2a764563252a"
              },
              "item": {
                "id": "65f2de2d-52b0-4504-84b7-07927557d8b8",
                "name": "Experience Rules POST",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "experience",
                      "rules"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\"title\": \"test rule\", \"content\": \"test rule content\", \"category\": \"test\", \"tags\": [\"test\"], \"sources\": [\"integration_test\"]}"
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0877450-953e-4ffd-903c-5aa13deddb9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Experience rules POST endpoint responds', function () {",
                        "  pm.expect([200,201]).to.include(pm.response.code);",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const EXPERIENCE_ALLOWED = new Set(['active','deprecated','draft']);",
                        "",
                        "function validateExperienceStatus(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(validateExperienceStatus); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        // Experience rules can use 'active' (enable/disable semantics)",
                        "        pm.expect(EXPERIENCE_ALLOWED.has(v)).to.eql(true, `ExperienceRule invalid status: ${v}`);",
                        "      }",
                        "      validateExperienceStatus(v);",
                        "    });",
                        "  }",
                        "}",
                        "validateExperienceStatus(json);",
                        "pm.test('Experience rule status validation passed', function () { pm.expect(true).to.be.true; });"
                      ],
                      "_lastExecutionId": "40e0c946-b691-45dc-8b2f-bef04582c94f"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "experience",
                    "rules"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "b9d80ff5-e59a-4fdd-aae2-7fc2d55b4a2e",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  },
                  {
                    "key": "Content-Length",
                    "value": "125",
                    "system": true
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"title\": \"test rule\", \"content\": \"test rule content\", \"category\": \"test\", \"tags\": [\"test\"], \"sources\": [\"integration_test\"]}"
                }
              },
              "response": {
                "id": "4832cb11-28db-49f1-beb5-b5fd3fba1bd5",
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:44 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "content-length",
                    "value": "400"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "d23a8108-7448-4ce5-8f95-adaf4d2e994f"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    105,
                    100,
                    34,
                    58,
                    34,
                    97,
                    51,
                    102,
                    100,
                    97,
                    101,
                    54,
                    56,
                    45,
                    54,
                    52,
                    54,
                    98,
                    45,
                    52,
                    56,
                    53,
                    54,
                    45,
                    56,
                    53,
                    56,
                    99,
                    45,
                    56,
                    99,
                    56,
                    56,
                    50,
                    48,
                    100,
                    51,
                    51,
                    98,
                    48,
                    99,
                    34,
                    44,
                    34,
                    116,
                    105,
                    116,
                    108,
                    101,
                    34,
                    58,
                    34,
                    116,
                    101,
                    115,
                    116,
                    32,
                    114,
                    117,
                    108,
                    101,
                    34,
                    44,
                    34,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    34,
                    58,
                    34,
                    116,
                    101,
                    115,
                    116,
                    32,
                    114,
                    117,
                    108,
                    101,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    34,
                    44,
                    34,
                    99,
                    97,
                    116,
                    101,
                    103,
                    111,
                    114,
                    121,
                    34,
                    58,
                    34,
                    116,
                    101,
                    115,
                    116,
                    34,
                    44,
                    34,
                    116,
                    97,
                    103,
                    115,
                    34,
                    58,
                    91,
                    34,
                    116,
                    101,
                    115,
                    116,
                    34,
                    93,
                    44,
                    34,
                    115,
                    111,
                    117,
                    114,
                    99,
                    101,
                    115,
                    34,
                    58,
                    91,
                    34,
                    105,
                    110,
                    116,
                    101,
                    103,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    116,
                    101,
                    115,
                    116,
                    34,
                    93,
                    44,
                    34,
                    118,
                    101,
                    114,
                    115,
                    105,
                    111,
                    110,
                    34,
                    58,
                    34,
                    118,
                    49,
                    34,
                    44,
                    34,
                    99,
                    111,
                    110,
                    102,
                    105,
                    100,
                    101,
                    110,
                    99,
                    101,
                    34,
                    58,
                    48,
                    46,
                    55,
                    44,
                    34,
                    119,
                    101,
                    105,
                    103,
                    104,
                    116,
                    34,
                    58,
                    49,
                    46,
                    48,
                    44,
                    34,
                    115,
                    116,
                    97,
                    116,
                    117,
                    115,
                    34,
                    58,
                    34,
                    97,
                    99,
                    116,
                    105,
                    118,
                    101,
                    34,
                    44,
                    34,
                    99,
                    114,
                    101,
                    97,
                    116,
                    101,
                    100,
                    95,
                    97,
                    116,
                    34,
                    58,
                    34,
                    50,
                    48,
                    50,
                    53,
                    45,
                    48,
                    56,
                    45,
                    50,
                    56,
                    84,
                    48,
                    57,
                    58,
                    53,
                    53,
                    58,
                    52,
                    56,
                    46,
                    51,
                    54,
                    50,
                    55,
                    53,
                    54,
                    43,
                    48,
                    48,
                    58,
                    48,
                    48,
                    34,
                    44,
                    34,
                    117,
                    112,
                    100,
                    97,
                    116,
                    101,
                    100,
                    95,
                    97,
                    116,
                    34,
                    58,
                    34,
                    50,
                    48,
                    50,
                    53,
                    45,
                    48,
                    56,
                    45,
                    50,
                    56,
                    84,
                    49,
                    49,
                    58,
                    50,
                    54,
                    58,
                    51,
                    51,
                    46,
                    53,
                    49,
                    56,
                    52,
                    53,
                    55,
                    43,
                    48,
                    48,
                    58,
                    48,
                    48,
                    34,
                    44,
                    34,
                    102,
                    105,
                    110,
                    103,
                    101,
                    114,
                    112,
                    114,
                    105,
                    110,
                    116,
                    34,
                    58,
                    34,
                    56,
                    97,
                    52,
                    50,
                    52,
                    49,
                    51,
                    100,
                    53,
                    55,
                    51,
                    53,
                    54,
                    50,
                    53,
                    55,
                    50,
                    98,
                    52,
                    102,
                    49,
                    99,
                    56,
                    49,
                    54,
                    99,
                    54,
                    53,
                    49,
                    57,
                    55,
                    54,
                    49,
                    100,
                    50,
                    101,
                    100,
                    57,
                    52,
                    52,
                    100,
                    100,
                    50,
                    54,
                    101,
                    51,
                    102,
                    98,
                    54,
                    102,
                    57,
                    57,
                    97,
                    50,
                    100,
                    48,
                    101,
                    100,
                    56,
                    51,
                    102,
                    57,
                    50,
                    98,
                    34,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 3,
                "responseSize": 400
              },
              "id": "65f2de2d-52b0-4504-84b7-07927557d8b8",
              "assertions": [
                {
                  "assertion": "Experience rules POST endpoint responds",
                  "skipped": false
                },
                {
                  "assertion": "Experience rule status validation passed",
                  "skipped": false
                }
              ]
            },
            {
              "cursor": {
                "ref": "e0ab1a5f-9054-4d17-a0c1-b7a4193003f2",
                "length": 12,
                "cycles": 1,
                "position": 8,
                "iteration": 0,
                "httpRequestId": "fabecf17-8257-4444-9234-5e0ed5a0c1ea"
              },
              "item": {
                "id": "98981e6d-2bb7-4141-958c-490d57e62628",
                "name": "Experience Candidates GET",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "experience",
                      "candidates"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85b1a9d0-9b15-41c3-b211-3dcfe92d7e4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Experience candidates endpoint responds', function () {",
                        "  pm.expect([200]).to.include(pm.response.code);",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const EXPERIENCE_ALLOWED = new Set(['active','deprecated','draft']);",
                        "",
                        "function validateCandidateStatus(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(validateCandidateStatus); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        pm.expect(EXPERIENCE_ALLOWED.has(v)).to.eql(true, `Candidate invalid status: ${v}`);",
                        "      }",
                        "      validateCandidateStatus(v);",
                        "    });",
                        "  }",
                        "}",
                        "validateCandidateStatus(json);"
                      ],
                      "_lastExecutionId": "f96ddbb9-bd29-4df0-bfb7-5e1e6f810edf"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "experience",
                    "candidates"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "1611e437-c781-46f1-8c3e-dac4029f2a6e",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  }
                ],
                "method": "GET"
              },
              "response": {
                "id": "135b54c6-5ea7-4c64-89b5-c44dda8e519c",
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:44 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "content-length",
                    "value": "455"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "719070f3-b0c5-4300-a1eb-6895ff53d068"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    49,
                    44,
                    34,
                    114,
                    101,
                    116,
                    117,
                    114,
                    110,
                    101,
                    100,
                    34,
                    58,
                    49,
                    44,
                    34,
                    105,
                    116,
                    101,
                    109,
                    115,
                    34,
                    58,
                    91,
                    123,
                    34,
                    105,
                    100,
                    34,
                    58,
                    34,
                    53,
                    52,
                    49,
                    102,
                    50,
                    97,
                    97,
                    52,
                    45,
                    97,
                    57,
                    52,
                    50,
                    45,
                    52,
                    98,
                    54,
                    102,
                    45,
                    97,
                    48,
                    101,
                    102,
                    45,
                    53,
                    100,
                    57,
                    56,
                    100,
                    98,
                    55,
                    102,
                    54,
                    56,
                    55,
                    100,
                    34,
                    44,
                    34,
                    116,
                    105,
                    116,
                    108,
                    101,
                    34,
                    58,
                    34,
                    114,
                    101,
                    103,
                    95,
                    100,
                    114,
                    97,
                    102,
                    116,
                    95,
                    49,
                    34,
                    44,
                    34,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    34,
                    58,
                    34,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    95,
                    49,
                    34,
                    44,
                    34,
                    99,
                    97,
                    116,
                    101,
                    103,
                    111,
                    114,
                    121,
                    34,
                    58,
                    34,
                    103,
                    101,
                    110,
                    101,
                    114,
                    97,
                    108,
                    34,
                    44,
                    34,
                    116,
                    97,
                    103,
                    115,
                    34,
                    58,
                    91,
                    93,
                    44,
                    34,
                    115,
                    111,
                    117,
                    114,
                    99,
                    101,
                    115,
                    34,
                    58,
                    91,
                    93,
                    44,
                    34,
                    118,
                    101,
                    114,
                    115,
                    105,
                    111,
                    110,
                    34,
                    58,
                    34,
                    118,
                    49,
                    34,
                    44,
                    34,
                    99,
                    111,
                    110,
                    102,
                    105,
                    100,
                    101,
                    110,
                    99,
                    101,
                    34,
                    58,
                    48,
                    46,
                    55,
                    44,
                    34,
                    119,
                    101,
                    105,
                    103,
                    104,
                    116,
                    34,
                    58,
                    49,
                    46,
                    48,
                    44,
                    34,
                    115,
                    116,
                    97,
                    116,
                    117,
                    115,
                    34,
                    58,
                    34,
                    100,
                    114,
                    97,
                    102,
                    116,
                    34,
                    44,
                    34,
                    99,
                    114,
                    101,
                    97,
                    116,
                    101,
                    100,
                    95,
                    97,
                    116,
                    34,
                    58,
                    34,
                    50,
                    48,
                    50,
                    53,
                    45,
                    48,
                    56,
                    45,
                    50,
                    54,
                    84,
                    49,
                    51,
                    58,
                    53,
                    50,
                    58,
                    50,
                    56,
                    46,
                    56,
                    51,
                    55,
                    48,
                    53,
                    49,
                    43,
                    48,
                    48,
                    58,
                    48,
                    48,
                    34,
                    44,
                    34,
                    117,
                    112,
                    100,
                    97,
                    116,
                    101,
                    100,
                    95,
                    97,
                    116,
                    34,
                    58,
                    34,
                    50,
                    48,
                    50,
                    53,
                    45,
                    48,
                    56,
                    45,
                    50,
                    56,
                    84,
                    49,
                    49,
                    58,
                    50,
                    54,
                    58,
                    51,
                    51,
                    46,
                    53,
                    49,
                    56,
                    52,
                    52,
                    57,
                    43,
                    48,
                    48,
                    58,
                    48,
                    48,
                    34,
                    44,
                    34,
                    102,
                    105,
                    110,
                    103,
                    101,
                    114,
                    112,
                    114,
                    105,
                    110,
                    116,
                    34,
                    58,
                    34,
                    51,
                    99,
                    52,
                    48,
                    100,
                    101,
                    102,
                    55,
                    57,
                    101,
                    54,
                    99,
                    98,
                    49,
                    54,
                    48,
                    51,
                    56,
                    97,
                    50,
                    48,
                    101,
                    52,
                    99,
                    99,
                    101,
                    54,
                    98,
                    101,
                    102,
                    53,
                    101,
                    99,
                    54,
                    98,
                    101,
                    97,
                    101,
                    48,
                    101,
                    50,
                    102,
                    52,
                    48,
                    100,
                    101,
                    98,
                    57,
                    54,
                    57,
                    101,
                    49,
                    55,
                    55,
                    98,
                    99,
                    101,
                    49,
                    98,
                    100,
                    102,
                    49,
                    52,
                    101,
                    34,
                    125,
                    93,
                    44,
                    34,
                    117,
                    112,
                    100,
                    97,
                    116,
                    101,
                    100,
                    95,
                    97,
                    116,
                    34,
                    58,
                    34,
                    50,
                    48,
                    50,
                    53,
                    45,
                    48,
                    56,
                    45,
                    50,
                    56,
                    84,
                    49,
                    49,
                    58,
                    50,
                    55,
                    58,
                    52,
                    53,
                    46,
                    49,
                    52,
                    55,
                    51,
                    50,
                    55,
                    43,
                    48,
                    48,
                    58,
                    48,
                    48,
                    34,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 5,
                "responseSize": 455
              },
              "id": "98981e6d-2bb7-4141-958c-490d57e62628",
              "assertions": [
                {
                  "assertion": "Experience candidates endpoint responds",
                  "skipped": false
                }
              ]
            },
            {
              "cursor": {
                "ref": "744ad331-4c29-4dff-8b88-b1816ccee36f",
                "length": 12,
                "cycles": 1,
                "position": 9,
                "iteration": 0,
                "httpRequestId": "a7cf8ee6-bd28-40ec-a6d4-3af261e4403a"
              },
              "item": {
                "id": "9e9aebca-50c8-4a12-a7aa-e2f75c9dba49",
                "name": "Cloud Status",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "cloud",
                      "status"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "user_id",
                        "value": "test-user"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f531fca-66af-4833-80f7-d711dfba4506",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Cloud status endpoint responds', function () {",
                        "  pm.expect([200]).to.include(pm.response.code);",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const DISALLOWED = new Set(['running','success','error']);",
                        "const CLOUD_STATUS_ALLOWED = new Set(['connected','disconnected','syncing','error']);",
                        "",
                        "function validateCloudStatus(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(validateCloudStatus); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Cloud forbidden status: ${v}`);",
                        "        pm.expect(v !== 'active').to.eql(true, 'Cloud status cannot be active');",
                        "      }",
                        "      validateCloudStatus(v);",
                        "    });",
                        "  }",
                        "}",
                        "validateCloudStatus(json);"
                      ],
                      "_lastExecutionId": "487aed9c-7239-4197-b1f6-ca15eb04da04"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "cloud",
                    "status"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [
                    {
                      "key": "user_id",
                      "value": "test-user"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "45b49c71-a0ac-4dfc-a269-b5cf41a91f83",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  }
                ],
                "method": "GET"
              },
              "response": {
                "id": "102f7c31-48b3-43a7-9379-2d9ff415eaad",
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:45 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "content-length",
                    "value": "52"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "8b653b57-884c-4fd3-82f4-9611ab1c9c5a"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    115,
                    116,
                    97,
                    116,
                    117,
                    115,
                    34,
                    58,
                    34,
                    110,
                    111,
                    110,
                    101,
                    34,
                    44,
                    34,
                    99,
                    111,
                    110,
                    115,
                    101,
                    110,
                    116,
                    95,
                    97,
                    99,
                    116,
                    105,
                    118,
                    101,
                    34,
                    58,
                    102,
                    97,
                    108,
                    115,
                    101,
                    44,
                    34,
                    115,
                    99,
                    111,
                    112,
                    101,
                    115,
                    34,
                    58,
                    91,
                    93,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 3,
                "responseSize": 52
              },
              "id": "9e9aebca-50c8-4a12-a7aa-e2f75c9dba49",
              "assertions": [
                {
                  "assertion": "Cloud status endpoint responds",
                  "skipped": false
                }
              ]
            },
            {
              "cursor": {
                "ref": "42fcb6e6-1741-43f6-a79c-75bcd3c34130",
                "length": 12,
                "cycles": 1,
                "position": 10,
                "iteration": 0,
                "httpRequestId": "5e340c5f-7d2c-4996-994f-7babb3fe56cd"
              },
              "item": {
                "id": "9377feeb-0d94-4e31-8e49-0004fb89ecb7",
                "name": "Observability Metrics",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "observability",
                      "metrics"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11efdd57-559f-46b9-b9cc-a016daeddb00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Metrics endpoint responds', function () {",
                        "  pm.expect([200]).to.include(pm.response.code);",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const DISALLOWED = new Set(['running','success','error']);",
                        "",
                        "function validateMetricsStatus(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(validateMetricsStatus); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Metrics forbidden status: ${v}`);",
                        "        pm.expect(v !== 'active').to.eql(true, 'Metrics status cannot be active');",
                        "      }",
                        "      validateMetricsStatus(v);",
                        "    });",
                        "  }",
                        "}",
                        "validateMetricsStatus(json);",
                        "pm.test('Metrics status validation completed', function () { pm.expect(true).to.be.true; });"
                      ],
                      "_lastExecutionId": "147f3be0-1dda-45a0-8e32-ba85a03c3b9c"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "observability",
                    "metrics"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "e8a77fe8-68d0-49ef-88b3-acdfceed9e8d",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  }
                ],
                "method": "GET"
              },
              "response": {
                "id": "b872b969-977b-4121-8660-729cfab86fe3",
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:45 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "content-length",
                    "value": "4168"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "5f32af65-fb01-4b28-81e7-4ba815be4fde"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    101,
                    114,
                    115,
                    34,
                    58,
                    123,
                    34,
                    101,
                    120,
                    112,
                    101,
                    114,
                    105,
                    101,
                    110,
                    99,
                    101,
                    95,
                    115,
                    110,
                    97,
                    112,
                    115,
                    104,
                    111,
                    116,
                    95,
                    108,
                    111,
                    97,
                    100,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    49,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    101,
                    120,
                    99,
                    101,
                    112,
                    116,
                    105,
                    111,
                    110,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    50,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    97,
                    103,
                    101,
                    110,
                    116,
                    115,
                    47,
                    115,
                    116,
                    97,
                    116,
                    117,
                    115,
                    124,
                    52,
                    48,
                    52,
                    34,
                    58,
                    50,
                    44,
                    34,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    118,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    50,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    99,
                    108,
                    111,
                    117,
                    100,
                    47,
                    115,
                    116,
                    97,
                    116,
                    117,
                    115,
                    124,
                    52,
                    50,
                    50,
                    34,
                    58,
                    49,
                    44,
                    34,
                    97,
                    116,
                    116,
                    101,
                    110,
                    116,
                    105,
                    111,
                    110,
                    95,
                    103,
                    101,
                    116,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    50,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    99,
                    111,
                    110,
                    115,
                    99,
                    105,
                    111,
                    117,
                    115,
                    110,
                    101,
                    115,
                    115,
                    47,
                    97,
                    116,
                    116,
                    101,
                    110,
                    116,
                    105,
                    111,
                    110,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    50,
                    44,
                    34,
                    99,
                    111,
                    110,
                    115,
                    99,
                    105,
                    111,
                    117,
                    115,
                    110,
                    101,
                    115,
                    115,
                    95,
                    103,
                    101,
                    116,
                    95,
                    115,
                    116,
                    97,
                    116,
                    101,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    50,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    99,
                    111,
                    110,
                    115,
                    99,
                    105,
                    111,
                    117,
                    115,
                    110,
                    101,
                    115,
                    115,
                    47,
                    115,
                    116,
                    97,
                    116,
                    101,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    50,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    101,
                    120,
                    101,
                    99,
                    117,
                    116,
                    105,
                    111,
                    110,
                    47,
                    97,
                    99,
                    116,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    50,
                    44,
                    34,
                    101,
                    120,
                    112,
                    101,
                    114,
                    105,
                    101,
                    110,
                    99,
                    101,
                    95,
                    99,
                    97,
                    110,
                    100,
                    105,
                    100,
                    97,
                    116,
                    101,
                    95,
                    115,
                    101,
                    97,
                    114,
                    99,
                    104,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    50,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    101,
                    120,
                    112,
                    101,
                    114,
                    105,
                    101,
                    110,
                    99,
                    101,
                    47,
                    99,
                    97,
                    110,
                    100,
                    105,
                    100,
                    97,
                    116,
                    101,
                    115,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    50,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    101,
                    120,
                    112,
                    101,
                    114,
                    105,
                    101,
                    110,
                    99,
                    101,
                    47,
                    114,
                    117,
                    108,
                    101,
                    115,
                    124,
                    52,
                    50,
                    50,
                    34,
                    58,
                    49,
                    44,
                    34,
                    109,
                    101,
                    109,
                    111,
                    114,
                    121,
                    95,
                    101,
                    120,
                    112,
                    111,
                    114,
                    116,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    50,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    109,
                    101,
                    109,
                    111,
                    114,
                    121,
                    47,
                    101,
                    120,
                    112,
                    111,
                    114,
                    116,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    49,
                    44,
                    34,
                    109,
                    101,
                    109,
                    111,
                    114,
                    121,
                    95,
                    115,
                    121,
                    110,
                    99,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    50,
                    44,
                    34,
                    109,
                    101,
                    109,
                    111,
                    114,
                    121,
                    95,
                    105,
                    116,
                    101,
                    109,
                    115,
                    95,
                    115,
                    121,
                    110,
                    99,
                    101,
                    100,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    49,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    109,
                    101,
                    109,
                    111,
                    114,
                    121,
                    47,
                    115,
                    121,
                    110,
                    99,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    50,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    111,
                    98,
                    115,
                    101,
                    114,
                    118,
                    97,
                    98,
                    105,
                    108,
                    105,
                    116,
                    121,
                    47,
                    108,
                    111,
                    103,
                    115,
                    47,
                    115,
                    101,
                    97,
                    114,
                    99,
                    104,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    49,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    111,
                    98,
                    115,
                    101,
                    114,
                    118,
                    97,
                    98,
                    105,
                    108,
                    105,
                    116,
                    121,
                    47,
                    109,
                    101,
                    116,
                    114,
                    105,
                    99,
                    115,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    49,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    114,
                    101,
                    97,
                    115,
                    111,
                    110,
                    105,
                    110,
                    103,
                    47,
                    112,
                    108,
                    97,
                    110,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    50,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    109,
                    101,
                    109,
                    111,
                    114,
                    121,
                    47,
                    101,
                    120,
                    112,
                    111,
                    114,
                    116,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    49,
                    44,
                    34,
                    101,
                    120,
                    112,
                    101,
                    114,
                    105,
                    101,
                    110,
                    99,
                    101,
                    95,
                    114,
                    117,
                    108,
                    101,
                    95,
                    97,
                    100,
                    100,
                    101,
                    100,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    49,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    101,
                    120,
                    112,
                    101,
                    114,
                    105,
                    101,
                    110,
                    99,
                    101,
                    47,
                    114,
                    117,
                    108,
                    101,
                    115,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    49,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    99,
                    108,
                    111,
                    117,
                    100,
                    47,
                    115,
                    116,
                    97,
                    116,
                    117,
                    115,
                    124,
                    50,
                    48,
                    48,
                    34,
                    58,
                    49,
                    125,
                    44,
                    34,
                    116,
                    105,
                    109,
                    105,
                    110,
                    103,
                    115,
                    34,
                    58,
                    123,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    97,
                    103,
                    101,
                    110,
                    116,
                    115,
                    47,
                    115,
                    116,
                    97,
                    116,
                    117,
                    115,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    50,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    51,
                    49,
                    50,
                    53,
                    57,
                    57,
                    57,
                    51,
                    53,
                    53,
                    54,
                    56,
                    56,
                    54,
                    57,
                    49,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    51,
                    53,
                    57,
                    57,
                    57,
                    57,
                    57,
                    52,
                    55,
                    50,
                    52,
                    57,
                    56,
                    56,
                    57,
                    52,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    50,
                    54,
                    53,
                    49,
                    57,
                    57,
                    57,
                    50,
                    51,
                    56,
                    56,
                    55,
                    56,
                    52,
                    56,
                    56,
                    53,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    51,
                    53,
                    57,
                    57,
                    57,
                    57,
                    57,
                    52,
                    55,
                    50,
                    52,
                    57,
                    56,
                    56,
                    57,
                    52,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    99,
                    108,
                    111,
                    117,
                    100,
                    47,
                    115,
                    116,
                    97,
                    116,
                    117,
                    115,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    50,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    53,
                    53,
                    55,
                    49,
                    52,
                    57,
                    57,
                    57,
                    51,
                    50,
                    53,
                    53,
                    55,
                    51,
                    52,
                    52,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    54,
                    56,
                    50,
                    50,
                    57,
                    57,
                    57,
                    53,
                    54,
                    54,
                    55,
                    57,
                    51,
                    52,
                    52,
                    50,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    52,
                    51,
                    50,
                    48,
                    48,
                    48,
                    48,
                    50,
                    57,
                    56,
                    51,
                    50,
                    49,
                    50,
                    52,
                    55,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    54,
                    56,
                    50,
                    50,
                    57,
                    57,
                    57,
                    53,
                    54,
                    54,
                    55,
                    57,
                    51,
                    52,
                    52,
                    50,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    99,
                    111,
                    110,
                    115,
                    99,
                    105,
                    111,
                    117,
                    115,
                    110,
                    101,
                    115,
                    115,
                    47,
                    97,
                    116,
                    116,
                    101,
                    110,
                    116,
                    105,
                    111,
                    110,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    50,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    51,
                    55,
                    57,
                    56,
                    53,
                    48,
                    48,
                    52,
                    48,
                    49,
                    56,
                    57,
                    57,
                    50,
                    49,
                    56,
                    54,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    51,
                    56,
                    57,
                    48,
                    48,
                    48,
                    48,
                    53,
                    49,
                    54,
                    53,
                    52,
                    56,
                    55,
                    53,
                    51,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    51,
                    55,
                    48,
                    55,
                    48,
                    48,
                    48,
                    50,
                    56,
                    55,
                    50,
                    52,
                    57,
                    54,
                    56,
                    52,
                    51,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    51,
                    56,
                    57,
                    48,
                    48,
                    48,
                    48,
                    53,
                    49,
                    54,
                    53,
                    52,
                    56,
                    55,
                    53,
                    51,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    99,
                    111,
                    110,
                    115,
                    99,
                    105,
                    111,
                    117,
                    115,
                    110,
                    101,
                    115,
                    115,
                    47,
                    115,
                    116,
                    97,
                    116,
                    101,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    50,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    52,
                    48,
                    57,
                    51,
                    48,
                    48,
                    48,
                    51,
                    49,
                    54,
                    48,
                    54,
                    49,
                    48,
                    55,
                    57,
                    53,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    52,
                    55,
                    52,
                    54,
                    48,
                    48,
                    48,
                    48,
                    52,
                    57,
                    54,
                    51,
                    53,
                    55,
                    54,
                    56,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    51,
                    52,
                    52,
                    48,
                    48,
                    48,
                    48,
                    53,
                    56,
                    50,
                    52,
                    56,
                    54,
                    51,
                    57,
                    49,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    52,
                    55,
                    52,
                    54,
                    48,
                    48,
                    48,
                    48,
                    52,
                    57,
                    54,
                    51,
                    53,
                    55,
                    54,
                    56,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    101,
                    120,
                    101,
                    99,
                    117,
                    116,
                    105,
                    111,
                    110,
                    47,
                    97,
                    99,
                    116,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    50,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    50,
                    52,
                    56,
                    56,
                    53,
                    48,
                    48,
                    50,
                    49,
                    53,
                    49,
                    49,
                    51,
                    49,
                    54,
                    51,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    52,
                    48,
                    51,
                    56,
                    57,
                    57,
                    57,
                    55,
                    57,
                    55,
                    55,
                    55,
                    54,
                    51,
                    52,
                    49,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    48,
                    57,
                    51,
                    56,
                    48,
                    48,
                    48,
                    54,
                    51,
                    50,
                    52,
                    52,
                    57,
                    57,
                    56,
                    53,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    52,
                    48,
                    51,
                    56,
                    57,
                    57,
                    57,
                    55,
                    57,
                    55,
                    55,
                    55,
                    54,
                    51,
                    52,
                    49,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    101,
                    120,
                    112,
                    101,
                    114,
                    105,
                    101,
                    110,
                    99,
                    101,
                    47,
                    99,
                    97,
                    110,
                    100,
                    105,
                    100,
                    97,
                    116,
                    101,
                    115,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    50,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    53,
                    56,
                    49,
                    55,
                    48,
                    48,
                    48,
                    54,
                    51,
                    55,
                    55,
                    54,
                    50,
                    50,
                    52,
                    57,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    54,
                    57,
                    50,
                    55,
                    48,
                    48,
                    48,
                    51,
                    53,
                    56,
                    55,
                    48,
                    48,
                    55,
                    53,
                    50,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    52,
                    55,
                    48,
                    55,
                    48,
                    48,
                    48,
                    57,
                    49,
                    54,
                    56,
                    50,
                    51,
                    55,
                    52,
                    53,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    54,
                    57,
                    50,
                    55,
                    48,
                    48,
                    48,
                    51,
                    53,
                    56,
                    55,
                    48,
                    48,
                    55,
                    53,
                    50,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    101,
                    120,
                    112,
                    101,
                    114,
                    105,
                    101,
                    110,
                    99,
                    101,
                    47,
                    114,
                    117,
                    108,
                    101,
                    115,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    50,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    55,
                    53,
                    56,
                    51,
                    57,
                    57,
                    57,
                    52,
                    51,
                    51,
                    53,
                    53,
                    52,
                    55,
                    49,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    50,
                    46,
                    56,
                    55,
                    48,
                    51,
                    57,
                    57,
                    57,
                    55,
                    48,
                    53,
                    54,
                    49,
                    50,
                    54,
                    54,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    54,
                    52,
                    54,
                    51,
                    57,
                    57,
                    57,
                    49,
                    54,
                    49,
                    52,
                    57,
                    54,
                    55,
                    53,
                    56,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    50,
                    46,
                    56,
                    55,
                    48,
                    51,
                    57,
                    57,
                    57,
                    55,
                    48,
                    53,
                    54,
                    49,
                    50,
                    54,
                    54,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    109,
                    101,
                    109,
                    111,
                    114,
                    121,
                    47,
                    101,
                    120,
                    112,
                    111,
                    114,
                    116,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    49,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    48,
                    50,
                    49,
                    55,
                    48,
                    48,
                    48,
                    57,
                    54,
                    51,
                    49,
                    54,
                    54,
                    51,
                    53,
                    54,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    48,
                    50,
                    49,
                    55,
                    48,
                    48,
                    48,
                    57,
                    54,
                    51,
                    49,
                    54,
                    54,
                    51,
                    53,
                    54,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    48,
                    50,
                    49,
                    55,
                    48,
                    48,
                    48,
                    57,
                    54,
                    51,
                    49,
                    54,
                    54,
                    51,
                    53,
                    54,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    48,
                    50,
                    49,
                    55,
                    48,
                    48,
                    48,
                    57,
                    54,
                    51,
                    49,
                    54,
                    54,
                    51,
                    53,
                    54,
                    125,
                    44,
                    34,
                    109,
                    101,
                    109,
                    111,
                    114,
                    121,
                    95,
                    115,
                    121,
                    110,
                    99,
                    95,
                    109,
                    115,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    50,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    48,
                    48,
                    53,
                    53,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    48,
                    48,
                    54,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    48,
                    48,
                    53,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    48,
                    48,
                    54,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    109,
                    101,
                    109,
                    111,
                    114,
                    121,
                    47,
                    115,
                    121,
                    110,
                    99,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    50,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    57,
                    48,
                    57,
                    48,
                    53,
                    48,
                    49,
                    48,
                    48,
                    57,
                    52,
                    56,
                    54,
                    54,
                    49,
                    54,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    51,
                    46,
                    49,
                    49,
                    53,
                    53,
                    48,
                    48,
                    48,
                    57,
                    48,
                    54,
                    52,
                    51,
                    55,
                    54,
                    51,
                    53,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    55,
                    48,
                    50,
                    54,
                    48,
                    48,
                    49,
                    49,
                    49,
                    50,
                    53,
                    51,
                    53,
                    53,
                    57,
                    54,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    51,
                    46,
                    49,
                    49,
                    53,
                    53,
                    48,
                    48,
                    48,
                    57,
                    48,
                    54,
                    52,
                    51,
                    55,
                    54,
                    51,
                    53,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    111,
                    98,
                    115,
                    101,
                    114,
                    118,
                    97,
                    98,
                    105,
                    108,
                    105,
                    116,
                    121,
                    47,
                    108,
                    111,
                    103,
                    115,
                    47,
                    115,
                    101,
                    97,
                    114,
                    99,
                    104,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    49,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    52,
                    53,
                    51,
                    55,
                    48,
                    48,
                    48,
                    48,
                    57,
                    55,
                    51,
                    51,
                    52,
                    51,
                    56,
                    53,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    52,
                    53,
                    51,
                    55,
                    48,
                    48,
                    48,
                    48,
                    57,
                    55,
                    51,
                    51,
                    52,
                    51,
                    56,
                    53,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    52,
                    53,
                    51,
                    55,
                    48,
                    48,
                    48,
                    48,
                    57,
                    55,
                    51,
                    51,
                    52,
                    51,
                    56,
                    53,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    52,
                    53,
                    51,
                    55,
                    48,
                    48,
                    48,
                    48,
                    57,
                    55,
                    51,
                    51,
                    52,
                    51,
                    56,
                    53,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    111,
                    98,
                    115,
                    101,
                    114,
                    118,
                    97,
                    98,
                    105,
                    108,
                    105,
                    116,
                    121,
                    47,
                    109,
                    101,
                    116,
                    114,
                    105,
                    99,
                    115,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    49,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    53,
                    51,
                    54,
                    51,
                    48,
                    48,
                    48,
                    48,
                    57,
                    49,
                    49,
                    54,
                    53,
                    51,
                    48,
                    52,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    53,
                    51,
                    54,
                    51,
                    48,
                    48,
                    48,
                    48,
                    57,
                    49,
                    49,
                    54,
                    53,
                    51,
                    48,
                    52,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    53,
                    51,
                    54,
                    51,
                    48,
                    48,
                    48,
                    48,
                    57,
                    49,
                    49,
                    54,
                    53,
                    51,
                    48,
                    52,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    53,
                    51,
                    54,
                    51,
                    48,
                    48,
                    48,
                    48,
                    57,
                    49,
                    49,
                    54,
                    53,
                    51,
                    48,
                    52,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    80,
                    79,
                    83,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    114,
                    101,
                    97,
                    115,
                    111,
                    110,
                    105,
                    110,
                    103,
                    47,
                    112,
                    108,
                    97,
                    110,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    50,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    50,
                    56,
                    48,
                    53,
                    52,
                    57,
                    57,
                    55,
                    49,
                    56,
                    53,
                    50,
                    52,
                    53,
                    49,
                    54,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    53,
                    48,
                    48,
                    57,
                    48,
                    48,
                    48,
                    49,
                    57,
                    56,
                    57,
                    49,
                    53,
                    54,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    48,
                    54,
                    48,
                    49,
                    57,
                    57,
                    57,
                    50,
                    51,
                    56,
                    49,
                    51,
                    51,
                    52,
                    51,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    49,
                    46,
                    53,
                    48,
                    48,
                    57,
                    48,
                    48,
                    48,
                    49,
                    57,
                    56,
                    57,
                    49,
                    53,
                    54,
                    125,
                    44,
                    34,
                    104,
                    116,
                    116,
                    112,
                    95,
                    114,
                    101,
                    113,
                    117,
                    101,
                    115,
                    116,
                    95,
                    100,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    95,
                    109,
                    115,
                    124,
                    71,
                    69,
                    84,
                    124,
                    47,
                    97,
                    112,
                    105,
                    47,
                    118,
                    50,
                    46,
                    51,
                    45,
                    112,
                    114,
                    101,
                    118,
                    105,
                    101,
                    119,
                    47,
                    109,
                    101,
                    109,
                    111,
                    114,
                    121,
                    47,
                    101,
                    120,
                    112,
                    111,
                    114,
                    116,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    49,
                    46,
                    48,
                    44,
                    34,
                    97,
                    118,
                    103,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    52,
                    53,
                    49,
                    57,
                    57,
                    57,
                    57,
                    52,
                    57,
                    50,
                    57,
                    49,
                    51,
                    52,
                    56,
                    52,
                    54,
                    44,
                    34,
                    112,
                    57,
                    53,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    52,
                    53,
                    49,
                    57,
                    57,
                    57,
                    57,
                    52,
                    57,
                    50,
                    57,
                    49,
                    51,
                    52,
                    56,
                    52,
                    54,
                    44,
                    34,
                    109,
                    105,
                    110,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    52,
                    53,
                    49,
                    57,
                    57,
                    57,
                    57,
                    52,
                    57,
                    50,
                    57,
                    49,
                    51,
                    52,
                    56,
                    52,
                    54,
                    44,
                    34,
                    109,
                    97,
                    120,
                    95,
                    109,
                    115,
                    34,
                    58,
                    48,
                    46,
                    52,
                    53,
                    49,
                    57,
                    57,
                    57,
                    57,
                    52,
                    57,
                    50,
                    57,
                    49,
                    51,
                    52,
                    56,
                    52,
                    54,
                    125,
                    125,
                    44,
                    34,
                    103,
                    97,
                    117,
                    103,
                    101,
                    115,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    110,
                    115,
                    99,
                    105,
                    111,
                    117,
                    115,
                    110,
                    101,
                    115,
                    115,
                    95,
                    115,
                    116,
                    97,
                    116,
                    101,
                    34,
                    58,
                    48,
                    46,
                    48,
                    44,
                    34,
                    97,
                    116,
                    116,
                    101,
                    110,
                    116,
                    105,
                    111,
                    110,
                    95,
                    115,
                    116,
                    97,
                    99,
                    107,
                    95,
                    115,
                    105,
                    122,
                    101,
                    34,
                    58,
                    48,
                    46,
                    48,
                    44,
                    34,
                    101,
                    120,
                    112,
                    101,
                    114,
                    105,
                    101,
                    110,
                    99,
                    101,
                    95,
                    114,
                    117,
                    108,
                    101,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    52,
                    46,
                    48,
                    44,
                    34,
                    101,
                    120,
                    112,
                    101,
                    114,
                    105,
                    101,
                    110,
                    99,
                    101,
                    95,
                    99,
                    97,
                    110,
                    100,
                    105,
                    100,
                    97,
                    116,
                    101,
                    115,
                    95,
                    116,
                    111,
                    116,
                    97,
                    108,
                    34,
                    58,
                    49,
                    46,
                    48,
                    125,
                    44,
                    34,
                    108,
                    97,
                    98,
                    101,
                    108,
                    115,
                    34,
                    58,
                    123,
                    34,
                    99,
                    111,
                    110,
                    115,
                    99,
                    105,
                    111,
                    117,
                    115,
                    110,
                    101,
                    115,
                    115,
                    95,
                    115,
                    116,
                    97,
                    116,
                    101,
                    95,
                    108,
                    97,
                    98,
                    101,
                    108,
                    34,
                    58,
                    34,
                    105,
                    100,
                    108,
                    101,
                    34,
                    125,
                    44,
                    34,
                    119,
                    105,
                    110,
                    100,
                    111,
                    119,
                    34,
                    58,
                    50,
                    48,
                    48,
                    44,
                    34,
                    117,
                    112,
                    100,
                    97,
                    116,
                    101,
                    100,
                    95,
                    97,
                    116,
                    34,
                    58,
                    34,
                    50,
                    48,
                    50,
                    53,
                    45,
                    48,
                    56,
                    45,
                    50,
                    56,
                    84,
                    49,
                    49,
                    58,
                    50,
                    55,
                    58,
                    52,
                    54,
                    46,
                    51,
                    56,
                    48,
                    54,
                    49,
                    51,
                    43,
                    48,
                    48,
                    58,
                    48,
                    48,
                    34,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 4,
                "responseSize": 4168
              },
              "id": "9377feeb-0d94-4e31-8e49-0004fb89ecb7",
              "assertions": [
                {
                  "assertion": "Metrics endpoint responds",
                  "skipped": false
                },
                {
                  "assertion": "Metrics status validation completed",
                  "skipped": false
                }
              ]
            },
            {
              "cursor": {
                "ref": "a6a9cda0-bb65-43dd-81a2-4fdadfeca0d3",
                "length": 12,
                "cycles": 1,
                "position": 11,
                "iteration": 0,
                "httpRequestId": "207f75d6-11ce-41ca-99a2-b5aa27235aa2"
              },
              "item": {
                "id": "08daab52-5ac3-4592-ac0e-66d6a477cbf2",
                "name": "Observability Logs Search",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "v2.3-preview",
                      "observability",
                      "logs",
                      "search"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "q",
                        "value": "test"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a9b1266-1b7b-4d6b-b1a8-0c4848d67eeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Logs search endpoint responds', function () {",
                        "  pm.expect([200]).to.include(pm.response.code);",
                        "});",
                        "",
                        "let json = {};",
                        "try { json = pm.response.json(); } catch (e) { json = {}; }",
                        "",
                        "const DISALLOWED = new Set(['running','success','error']);",
                        "",
                        "function validateLogsStatus(obj) {",
                        "  if (obj === null || obj === undefined) return;",
                        "  if (Array.isArray(obj)) { obj.forEach(validateLogsStatus); return; }",
                        "  if (typeof obj === 'object') {",
                        "    Object.keys(obj).forEach(k => {",
                        "      const v = obj[k];",
                        "      if (k.toLowerCase() === 'status' && typeof v === 'string') {",
                        "        pm.expect(DISALLOWED.has(v)).to.eql(false, `Logs forbidden status: ${v}`);",
                        "        pm.expect(v !== 'active').to.eql(true, 'Logs status cannot be active');",
                        "      }",
                        "      validateLogsStatus(v);",
                        "    });",
                        "  }",
                        "}",
                        "validateLogsStatus(json);"
                      ],
                      "_lastExecutionId": "cd5bf3d0-4b1f-4e69-aa9c-525d8c0cc289"
                    }
                  }
                ]
              },
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "8000",
                  "path": [
                    "api",
                    "v2.3-preview",
                    "observability",
                    "logs",
                    "search"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [
                    {
                      "key": "q",
                      "value": "test"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "User-Agent",
                    "value": "PostmanRuntime/7.39.1",
                    "system": true
                  },
                  {
                    "key": "Accept",
                    "value": "*/*",
                    "system": true
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache",
                    "system": true
                  },
                  {
                    "key": "Postman-Token",
                    "value": "0b75fd3d-cbd5-4217-9f13-7e12d86a2e62",
                    "system": true
                  },
                  {
                    "key": "Host",
                    "value": "localhost:8000",
                    "system": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "gzip, deflate, br",
                    "system": true
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive",
                    "system": true
                  }
                ],
                "method": "GET"
              },
              "response": {
                "id": "2aafcd28-13dd-403d-adb1-82472b04eb38",
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "date",
                    "value": "Thu, 28 Aug 2025 11:27:46 GMT"
                  },
                  {
                    "key": "server",
                    "value": "uvicorn"
                  },
                  {
                    "key": "content-length",
                    "value": "83"
                  },
                  {
                    "key": "content-type",
                    "value": "application/json"
                  },
                  {
                    "key": "x-trace-id",
                    "value": "f4659f1c-cbd3-48ff-9be2-107e751aa14e"
                  }
                ],
                "stream": {
                  "type": "Buffer",
                  "data": [
                    123,
                    34,
                    99,
                    111,
                    117,
                    110,
                    116,
                    34,
                    58,
                    48,
                    44,
                    34,
                    114,
                    101,
                    116,
                    117,
                    114,
                    110,
                    101,
                    100,
                    34,
                    58,
                    48,
                    44,
                    34,
                    105,
                    116,
                    101,
                    109,
                    115,
                    34,
                    58,
                    91,
                    93,
                    44,
                    34,
                    117,
                    112,
                    100,
                    97,
                    116,
                    101,
                    100,
                    95,
                    97,
                    116,
                    34,
                    58,
                    34,
                    50,
                    48,
                    50,
                    53,
                    45,
                    48,
                    56,
                    45,
                    50,
                    56,
                    84,
                    49,
                    49,
                    58,
                    50,
                    55,
                    58,
                    52,
                    55,
                    46,
                    48,
                    48,
                    52,
                    51,
                    56,
                    57,
                    43,
                    48,
                    48,
                    58,
                    48,
                    48,
                    34,
                    125
                  ]
                },
                "cookie": [],
                "responseTime": 3,
                "responseSize": 83
              },
              "id": "08daab52-5ac3-4592-ac0e-66d6a477cbf2",
              "assertions": [
                {
                  "assertion": "Logs search endpoint responds",
                  "skipped": false
                }
              ]
            }
          ],
          "transfers": {
            "responseTotal": 6172
          },
          "failures": [],
          "error": null
        }
      },
      "effective_env": {
        "baseUrl": "http://localhost:8000"
      },
      "newman_detected": true
    }
  ]
}